{"version":3,"sources":["_font.scss","style.scss","../../../baseline/scss/plugins/_debug.scss","style.css","_menu-icon.scss","_header.scss","../../../baseline/scss/base/_math.scss","../../../baseline/scss/base/_api.scss","../node_modules/susy/sass/susy/_su-math.scss","_why.scss","_how.scss","../../../baseline/scss/plugins/_aspect.scss","_with.scss","_footer.scss"],"names":[],"mappings":"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;EAhBF;IAkBE,iBAAgB;IAEhB,gBRmCqC;IQnCrC,oBRmCqC;IQlCrC,0BH6C8E;IG5C9E,oBF6GqC;IE7GrC,yBF6GqC;IE5GrC,uBFmKqC;IEnKrC,4BFmKqC,EElKrC;EAxBF;IA0BE,sBDgE8C;IC/D9C,4BD+D8C;IC9D9C,aAAY,EACZ;ERmBD;IQhDD;MA+BE,yBAAuC;MAAvC,yBAAuC,EAYxC;MAXC;QACC,YAAW,EACX;MAlCH;QAoCG,eAAc;QACd,YAAW,EACX;MAtCH;QAwCG,cAAa,EACb,EAAA;;AC3CH;EACC,UAAS;EACT,YAAW;EACX,eAAc,EAoBd;EAvBD;yBCwFe,MAAyB,EDlFtC;ICsGC;MD5GH;6BC6GkB,MAA2B,EDvG3C,EAAA;ICsGC;MD5GH;6BC6GkB,MAA2B,EDvG3C,EAAA;ICsGC;MD5GH;6BC6GkB,MAA2B,EDvG3C,EAAA;ICsGC;MD5GH;6BC6GkB,MAA2B,EDvG3C,EAAA;ICsGC;MD5GH;6BC6GkB,MAA2B,EDvG3C,EAAA;ICsGC;MD5GH;6BC6GkB,MAA2B,EDvG3C,EAAA;ICsGC;MD5GH;6BC6GkB,MAA2B,EDvG3C,EAAA;ICsGC;MD5GH;6BC6GkB,MAA2B,EDvG3C,EAAA;ICsGC;MD5GH;6BC6GkB,MAA2B,EDvG3C,EAAA;ICsGC;MD5GH;6BC6GkB,MAA2B,EDvG3C,EAAA;ICsGC;MD5GH;6BC6GkB,MAA2B,EDvG3C,EAAA;ICsGC;MD5GH;6BC6GkB,MAA2B,EDvG3C,EAAA;ICsGC;MD5GH;6BC6GkB,MAA2B,EDvG3C,EAAA;ICsGC;MD5GH;6BC6GkB,MAA2B,EDvG3C,EAAA;ICsGC;MD5GH;6BC6GkB,MAA2B,EDvG3C,EAAA;ICsGC;MD5GH;6BC6GkB,MAA2B,EDvG3C,EAAA;ICsGC;MD5GH;6BC6GkB,MAA2B,EDvG3C,EAAA;ICsGC;MD5GH;6BC6GkB,MAA2B,EDvG3C,EAAA;ICsGC;MD5GH;6BC6GkB,MAA2B,EDvG3C,EAAA;ICsGC;MD5GH;6BC6GkB,MAA2B,EDvG3C,EAAA;ICsGC;MD5GH;6BC6GkB,KAA2B,EDvG3C,EAAA;ICsGC;MD5GH;6BC6GkB,KAA2B,E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ChB,sBAAqB;EAGrB,gBA/IsC;EA+ItC,kBA/IsC;EAgJtC,0BKrI+E;ELsI/E,mBMrEsC;ENqEtC,sBMrEsC;ENsEtC,uBMfsC;ENetC,yBMfsC,EN+CtC;EAzCD;IAYE,eAvGiB;IAwGjB,iBAAgB,EAChB;EA9JD;IAgJD;MAoBE,gBA7JqC;MA6JrC,kBA7JqC;MA8JrC,0BKnJ8E;MLoJ9E,mBMnFqC;MNmFrC,sBMnFqC;MNoFrC,uBM7BqC;MN6BrC,yBM7BqC,EN+CtC,EAAA;EAfA;IA1BD;MA4BE,gBArKqC;MAqKrC,kBArKqC;MAsKrC,iBK3J8E;ML4J9E,kBM3FqC;MN2FrC,sBM3FqC;MN4FrC,qBMrCqC;MNqCrC,yBMrCqC,EN+CtC,EAAA;EAzLA;IAgJD;MAoCE,gBA7KqC;MA6KrC,kBA7KqC;MA8KrC,0BKnK8E;MLoK9E,mBMnGqC;MNmGrC,sBMnGqC;MNoGrC,sBM7CqC;MN6CrC,yBM7CqC,EN+CtC,EAAA;;AAED;EAEE,mBK3N4C;EL2N5C,kBK3N4C;EL4N5C,sBK5N4C;EL4N5C,qBK5N4C,ELuO5C;EAzMD;IA2LD;MAMG,kBK/N2C;ML+N3C,kBK/N2C;MLgO3C,qBKhO2C;MLgO3C,qBKhO2C,ELuO5C,EAAA;EAzMD;IA2LD;MAWG,kBKpO2C;MLoO3C,kBKpO2C;MLqO3C,qBKrO2C;MLqO3C,qBKrO2C,ELuO5C,EAAA;;AAGF;EAEC,gBAvMsC;EAuMtC,oBAvMsC;EAwMtC,0BK7L+E;EL8L/E,oBM7HsC;EN6HtC,yBM7HsC;EN8HtC,wBMvEsC;ENuEtC,4BMvEsC,ENgGtC;EAvBA;IAPD;MASE,gBA9MqC;MA8MrC,oBA9MqC;MA+MrC,0BKpM8E;MLqM9E,oBMpIqC;MNoIrC,yBMpIqC;MNqIrC,wBM9EqC;MN8ErC,4BM9EqC,ENgGtC,EAAA;EA1OA;IA4MD;MAsBE,mBAAkB;MAGlB,gBA9NqC;MA8NrC,oBA9NqC;MA+NrC,iBKpN8E;MLqN9E,qBMpJqC;MNoJrC,yBMpJqC;MNqJrC,uBM9FqC;MN8FrC,4BM9FqC,ENgGtC,EAAA","file":"../_scss/style.css","sourcesContent":["@font-face {\n\tfont-family: \"Segoe UI\";\n\tsrc: local(\"SegoeUI-Light\");\n\tfont-weight: 200;\n}\n@font-face {\n\tfont-family: \"Segoe UI\";\n\tsrc: local(\"SegoeUI-LightItalic\");\n\tfont-style: italic;\n\tfont-weight: 200;\n}\n// @font-face {\n//\t font-family: \"Segoe UI\";\n//\t src: local(\"SegoeUI-Semilight\");\n//\t font-weight: 300;\n// }\n// @font-face {\n//\t font-family: \"Segoe UI\";\n//\t src: local(\"SegoeUI-SemilightItalic\");\n//\t font-style: italic;\n//\t font-weight: 300;\n// }\n@font-face {\n\tfont-family: \"Segoe UI\";\n\tsrc: local(\"SegoeUI\");\n\tfont-weight: 400;\n}\n@font-face {\n\tfont-family: \"Segoe UI\";\n\tsrc: local(\"SegoeUI-Italic\");\n\tfont-style: italic;\n\tfont-weight: 400;\n}\n@font-face {\n\tfont-family: \"Segoe UI\";\n\tsrc: local(\"SegoeUI-Semibold\");\n\tfont-weight: 500;\n}\n@font-face {\n\tfont-family: \"Segoe UI\";\n\tsrc: local(\"SegoeUI-SemiboldItalic\");\n\tfont-style: italic;\n\tfont-weight: 500;\n}\n// @font-face {\n//\t font-family: \"Segoe UI\";\n//\t src: local(\"SegoeUI-Bold\");\n//\t font-weight: 600;\n// }\n// @font-face {\n//\t font-family: \"Segoe UI\";\n//\t src: local(\"SegoeUI-BoldItalic\");\n//\t font-style: italic;\n//\t font-weight: 600;\n// }\n// @font-face {\n//\t font-family: \"Segoe UI\";\n//\t src: local(\"SegoeUIBlack\");\n//\t font-weight: 700;\n// }\n// @font-face {\n//\t font-family: \"Segoe UI\";\n//\t src: local(\"SegoeUIBlack-Italic\");\n//\t font-style: italic;\n//\t font-weight: 700;\n// }","@import \"susy\";\n@import \"susy/plugins/svg-grid\";\n@import \"sassy-inline-svg\";\n@import \"../../../baseline/scss/base\";\n@import \"font\";\n\n// ******** FUNCTION HELPERS ********\n\n//*\n///  Based on https://www.rucksackcss.org/docs/#responsive-type`\n///  @param {Number} $min       Minimal font-size\n///  @param {Number} $max       Maximum font-size\n///  @param {Number} $min-width Minimal width\n///  @param {Number} $max-width Width when showing maximum font-size\n///  @return {Number}\n@function responsive-text($min, $max, $min-width, $max-width) {\n\t// min + (min - max) * ((100vw - min-width) / (max-width - min-width))\n\t// calc(12px + 9 * ( (100vw - 420px) / 860))\n\t@return calc(#{$min} + #{strip-unit($max - $min)} * ( (100vw - #{$min-width}) / #{strip-unit($max-width - $min-width)}));\n}\n\n//*\n/// Wrapper for the calc() function cleans up its content\n/// * remove quotes to allow operators in lists\n/// @param  {list} $items   list of operators, numbers and calc() strings\n/// @return {string}        calc() string\n@function calc-ext($items) {\n\t// loop through list and cleanup items\n\t@for $i from 1 through length($items) {\n\t\t$item: nth($items, $i);\n\n\t\t@if type-of($item) == \"string\" {\n\t\t\t// remove calc from string if exists, to allow better browser support\n\t\t\t@if str-index($item, \"calc\") == 1 {\n\t\t\t\t$item: str-slice($item, 5);\n\t\t\t}\n\t\t\t// remove possible quotes, needed for allow math operator to be added to a list\n\t\t\t$items: set-nth($items, $i, unquote($item));\n\t\t}\n\t}\n\n\t@return calc(#{$items});\n}\n\n@function strip-unit($length) {\n\t@return $length / ($length * 0 + 1);\n}\n\n@mixin bp($width) {\n\t$width: if(type-of($width) == \"number\", $width, map-get($width, \"max-width\"));\n\t@media (max-width: $width) {\n\t\t@content;\n\t}\n}\n\n$base-font-size: 16px;\n@function rem($size) {\n\t@return $size / $base-font-size * 1rem;\n}\n\n@function em($size, $font-size: $base-font-size) {\n\t@return $size / $font-size * 1em;\n}\n\n@function em-to-rem($size) {\n\t@return $size / 1em * 1rem;\n}\n\n// **** END OF FUNCTION HELPERS ****\n\n$base: (\n\tfont-size: 1rem,\n\trow-height: 1,\n\tcap-height: .83,\n\tmin-line-height: 1.2\n);\n\n$susy: (\n\tcolumns: susy-repeat(12),\n\tgutters: .5,\n\tcontainer-spread: wider,\n\tdesign-width: em(1480px)\n);\n$small: (\n\tcolumns: susy-repeat(4),\n\tgutters: 20 / 55,\n\tcontainer-spread: wider,\n\tmax-width: em(760px),\n\tdesign-width: em(320px)\n);\n\n$color-white: #FAFAFA;\n$color-red: #AA0000;\n$color-black: #545454;\n$color-green-dark: #0F2E1C;;\n$color-green: #18472C;\n$color-green-light: #20603C;\n$color-blue: #0F4880;\n\n// with - tools\n$color-blue: #1564B3;\n$color-orange: #CC3D19;\n$color-pink: #C24282;\n$color-red: #DA1B1B;\n\n$color-red-transparent: rgba($color-red, .7);\n\n// cheap reset\n* {\n\tmargin: 0;\n\tpadding: 0;\n}\n\nhead {\n\tdisplay: block;\n\tposition: fixed;\n\tbottom: .2rem;\n\tright: .2rem;\n\tfont-size: 3rem;\n\tz-index: 2;\n\t&::before {\n\t\tcontent: \"\\2261\";\n\t}\n\t&:hover, &:focus {\n\t\tz-index: 1;\n\t\tpointer-events: all;\n\t\t~ body {\n\t\t\tposition: relative;\n\t\t\t&::after {\n\t\t\t\tcontent: \"\";\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t\tright: 0;\n\t\t\t\t// height: 499%;\n\t\t\t\tbottom: 0;\n\t\t\t\tpointer-events: none;\n\t\t\t\tbackground-image: susy-svg-grid(), base-debug-image();\n\t\t\t\t@include bp($small) {\n\t\t\t\t\tbackground: susy-svg-grid($small), base-debug-image();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nbody {\n\tfont-family: \"Segoe UI\";\n\tbackground-color: $color-white;\n\tcolor: $color-black;\n}\n\nsvg {\n\t// fill: currentColor;\n\twidth: 1em;\n\theight: 1em;\n}\n\n// hidden attr fix for at least svgs\n[hidden] { display: none; }\n\n.hide {\n\t@media (min-width: map-get($small, \"max-width\")) {\n\t\t&_desktop {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\t@include bp($small) {\n\t\t&_mobile {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n\n@import \"header\";\n@import \"why\";\n@import \"how\";\n@import \"with\";\n@import \"footer\";\n\nmain {\n\ttransition: transform .2s linear;\n}\n\nsection {\n\twidth: span(10);\n\tmargin: 0 span(1 wider);\n\n\t@include bp($small) {\n\t\twidth: auto;\n\t\tmargin: 0 gutter($small);\n\t}\n}\n\nh1 {\n\tmargin: 0;\n\tfont-weight: 200;\n\tdisplay: inline-block;\n\n\t$font-size: rem(72px);\n\tfont-size: $font-size;\n\tline-height: line-height($font-size);\n\tmargin-top: top($font-size);\n\tmargin-bottom: bottom($font-size);\n\n\tspan {\n\t\tcolor: $color-red;\n\t\tfont-weight: 400;\n\t}\n\n\t// adjusting text-size to keep intro text some what on 3 lines\n\n\t@include bp(map-get($susy, \"design-width\")) {\n\t\t$font-size: rem(56px);\n\t\tfont-size: $font-size;\n\t\tline-height: line-height($font-size);\n\t\tmargin-top: top($font-size);\n\t\tmargin-bottom: bottom($font-size);\n\t}\n\n\t@media (max-width: rem(1110px)) {\n\t\t$font-size: rem(40px);\n\t\tfont-size: $font-size;\n\t\tline-height: line-height($font-size);\n\t\tmargin-top: top($font-size);\n\t\tmargin-bottom: bottom($font-size);\n\t}\n\n\t@include bp($small) {\n\t\t$font-size: rem(24px);\n\t\tfont-size: $font-size;\n\t\tline-height: line-height($font-size);\n\t\tmargin-top: top($font-size);\n\t\tmargin-bottom: bottom($font-size);\n\t}\n}\n\n.intro {\n\th1 {\n\t\tpadding-top: row(8);\n\t\tpadding-bottom: row(8);\n\n\t\t@include bp(map-get($susy, \"design-width\")) {\n\t\t\tpadding-top: row(5);\n\t\t\tpadding-bottom: row(5);\n\t\t}\n\n\t\t@include bp($small) {\n\t\t\tpadding-top: row(2);\n\t\t\tpadding-bottom: row(2);\n\t\t}\n\t}\n}\n\nh2 {\n\t$font-size: rem(90px);\n\tfont-size: $font-size;\n\tline-height: line-height($font-size);\n\tpadding-top: top($font-size);\n\tpadding-bottom: bottom($font-size);\n\n\t@media (max-width: 1380px) {\n\t\t$font-size: rem(54px);\n\t\tfont-size: $font-size;\n\t\tline-height: line-height($font-size);\n\t\tpadding-top: top($font-size);\n\t\tpadding-bottom: bottom($font-size);\n\t}\n\t// @media (max-width: 1070px){\n\t//     $config: _base-settings((font-size: rem(56px), add-rows-to-line-height: 0));\n\t//     font-size       : base(font-size, $config);\n\t//     line-height     : base(line-height, $config);\n\t//     margin-top      : base(top, $config); // + row(5, $config);\n\t//     margin-bottom   : base(bottom, $config); // + row(5, $config);\n\t// }\n\t@include bp($small) {\n\t\ttext-align: center;\n\n\t\t$font-size: rem(30px);\n\t\tfont-size: $font-size;\n\t\tline-height: line-height($font-size);\n\t\tpadding-top: top($font-size);\n\t\tpadding-bottom: bottom($font-size);\n\t}\n}","////\n///  @group plugin_debug\n////\n\n//* Base Debug Defaults\n/// This plugin adds the `debug-colors` property and default value to `$_base-settings-defaults` —\n/// you can override that value in `$base` or any other grid settings map.\n/// @type {map}\n$_base-settings-defaults: map-merge((debug-colors: transparent #0EF), $_base-settings-defaults);\n\n//* Base Debug Image\n/// Generates a debug image\n///\n/// @param {Map} $config [$base] -\n///   Optional map of Base configuration settings.\n///   See `$base` documentation for details.\n///\n/// @return {Linear-gradient}      A linear-gradient that displays the grid\n///\n/// @example scss\n///   $base: (cap-height: .5);\n///   body{\n///     background-image: base-debug-image();\n///   }\n@function base-debug-image($config: $base) {\n\t$config: _base-compile((), $config);\n\n\t$root-font-size: \tmap-get($config, \"root-font-size\");\n\t$row-height: \t\t\tmap-get($config, \"row-height\");\n\t$debug-colors:    map-get($config, \"debug-colors\");\n\n\t$calc-row-height: _base-math-row-height(1, $row-height, $root-font-size);\n\n\t@return repeating-linear-gradient(to bottom,\n\t\tnth($debug-colors, 1) 0,\n\t\tnth($debug-colors, 1) calc(#{$calc-row-height} - 1px),\n\t\tnth($debug-colors, 2) calc(#{$calc-row-height} - 1px),\n\t\tnth($debug-colors, 2) $calc-row-height\n  );\n}","@font-face {\n  font-family: \"Segoe UI\";\n  src: local(\"SegoeUI-Light\");\n  font-weight: 200; }\n\n@font-face {\n  font-family: \"Segoe UI\";\n  src: local(\"SegoeUI-LightItalic\");\n  font-style: italic;\n  font-weight: 200; }\n\n@font-face {\n  font-family: \"Segoe UI\";\n  src: local(\"SegoeUI\");\n  font-weight: 400; }\n\n@font-face {\n  font-family: \"Segoe UI\";\n  src: local(\"SegoeUI-Italic\");\n  font-style: italic;\n  font-weight: 400; }\n\n@font-face {\n  font-family: \"Segoe UI\";\n  src: local(\"SegoeUI-Semibold\");\n  font-weight: 500; }\n\n@font-face {\n  font-family: \"Segoe UI\";\n  src: local(\"SegoeUI-SemiboldItalic\");\n  font-style: italic;\n  font-weight: 500; }\n\n* {\n  margin: 0;\n  padding: 0; }\n\nhead {\n  display: block;\n  position: fixed;\n  bottom: .2rem;\n  right: .2rem;\n  font-size: 3rem;\n  z-index: 2; }\n  head::before {\n    content: \"\\2261\"; }\n  head:hover, head:focus {\n    z-index: 1;\n    pointer-events: all; }\n    head:hover ~ body, head:focus ~ body {\n      position: relative; }\n      head:hover ~ body::after, head:focus ~ body::after {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        pointer-events: none;\n        background-image: url('data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" fill=\"url(%23susy-svg-gradient)\" width=\"100%\" %3E%3Cdefs%3E%3ClinearGradient spreadMethod=\"pad\" id=\"susy-svg-gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"%3E%3Cstop offset=\"0%\" style=\"stop-color:rgba(64, 191, 64, 0.5);\" /%3E%3Cstop offset=\"100%\" style=\"stop-color:rgba(159, 223, 159, 0.5);\" /%3E%3C/linearGradient%3E%3C/defs%3E%3Crect x=\"2.7027027027%\" width=\"5.4054054054%\" height=\"100%\"/%3E%3Crect x=\"10.8108108108%\" width=\"5.4054054054%\" height=\"100%\"/%3E%3Crect x=\"18.9189189189%\" width=\"5.4054054054%\" height=\"100%\"/%3E%3Crect x=\"27.027027027%\" width=\"5.4054054054%\" height=\"100%\"/%3E%3Crect x=\"35.1351351351%\" width=\"5.4054054054%\" height=\"100%\"/%3E%3Crect x=\"43.2432432432%\" width=\"5.4054054054%\" height=\"100%\"/%3E%3Crect x=\"51.3513513514%\" width=\"5.4054054054%\" height=\"100%\"/%3E%3Crect x=\"59.4594594595%\" width=\"5.4054054054%\" height=\"100%\"/%3E%3Crect x=\"67.5675675676%\" width=\"5.4054054054%\" height=\"100%\"/%3E%3Crect x=\"75.6756756757%\" width=\"5.4054054054%\" height=\"100%\"/%3E%3Crect x=\"83.7837837838%\" width=\"5.4054054054%\" height=\"100%\"/%3E%3Crect x=\"91.8918918919%\" width=\"5.4054054054%\" height=\"100%\"/%3E%3C/svg%3E'), repeating-linear-gradient(to bottom, transparent 0, transparent calc(1rem - 1px), #0EF calc(1rem - 1px), #0EF 1rem); }\n        @media (max-width: 47.5em) {\n          head:hover ~ body::after, head:focus ~ body::after {\n            background: url('data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" fill=\"url(%23susy-svg-gradient)\" width=\"100%\" %3E%3Cdefs%3E%3ClinearGradient spreadMethod=\"pad\" id=\"susy-svg-gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"%3E%3Cstop offset=\"0%\" style=\"stop-color:rgba(64, 191, 64, 0.5);\" /%3E%3Cstop offset=\"100%\" style=\"stop-color:rgba(159, 223, 159, 0.5);\" /%3E%3C/linearGradient%3E%3C/defs%3E%3Crect x=\"6.25%\" width=\"17.1875%\" height=\"100%\"/%3E%3Crect x=\"29.6875%\" width=\"17.1875%\" height=\"100%\"/%3E%3Crect x=\"53.125%\" width=\"17.1875%\" height=\"100%\"/%3E%3Crect x=\"76.5625%\" width=\"17.1875%\" height=\"100%\"/%3E%3C/svg%3E'), repeating-linear-gradient(to bottom, transparent 0, transparent calc(1rem - 1px), #0EF calc(1rem - 1px), #0EF 1rem); } }\n\nbody {\n  font-family: \"Segoe UI\";\n  background-color: #FAFAFA;\n  color: #545454; }\n\nsvg {\n  width: 1em;\n  height: 1em; }\n\n[hidden] {\n  display: none; }\n\n@media (min-width: 47.5em) {\n  .hide_desktop {\n    display: none; } }\n\n@media (max-width: 47.5em) {\n  .hide_mobile {\n    display: none; } }\n\n.menu-icon {\n  display: inline-block;\n  position: relative; }\n\n.menu-icon_path {\n  background: currentColor;\n  position: absolute;\n  width: 56.56854248%;\n  transform-origin: left center;\n  top: 85%;\n  left: 10%; }\n\n.menu-icon_path.path--a {\n  top: 5%; }\n\n.menu-icon_path.path--b {\n  width: 80%; }\n\n.menu-icon_path.path--c {\n  transform-origin: right center; }\n\nbody > header {\n  font-size: 1.25rem;\n  line-height: 1.6;\n  padding-bottom: 0.51875rem;\n  padding-top: 1.48125rem;\n  text-align: right; }\n  body > header .menu-icon {\n    width: 1rem;\n    height: 1rem;\n    transition: 0.3s all 0s; }\n    body > header .menu-icon_path {\n      height: 0.1rem;\n      border-radius: 0.05rem;\n      transition: 0.3s transform cubic-bezier(0, 0, 0.4, 1.2) 0s, 0.3s height 0s; }\n      body > header .menu-icon_path.path--b {\n        transform: translateY(-0.4rem); }\n  .header_menu-button {\n    display: none; }\n  body > header li {\n    display: inline-block;\n    margin-right: 2.7027027027%; }\n  body > header a {\n    color: inherit;\n    text-decoration: none; }\n  body > header svg {\n    height: 0.9090909091em;\n    width: 1em; }\n\n@media (max-width: 760px) {\n  body > header {\n    color: #FAFAFA;\n    font-size: 1.25rem;\n    height: 3rem;\n    padding: 0; }\n    input:checked ~ header .menu-icon {\n      width: 2rem;\n      height: 2rem;\n      transition: 0.3s all 0.1s; }\n      input:checked ~ header .menu-icon_path {\n        height: 0.2rem;\n        border-radius: 0.1rem;\n        transition: 0.3s transform cubic-bezier(0, 0, 0.4, 1.2) 0.1s, 0.3s height 0.1s; }\n        input:checked ~ header .menu-icon_path.path--a {\n          transform: rotate(45deg); }\n        input:checked ~ header .menu-icon_path.path--b {\n          transform: rotate(-45deg) scaleX(1.414213562); }\n        input:checked ~ header .menu-icon_path.path--c {\n          transform: translateX(0.4686291504rem) rotate(45deg); }\n    body > header::before {\n      background: rgba(218, 27, 27, 0.7);\n      content: \"\";\n      display: block;\n      height: 1rem;\n      position: fixed;\n      right: 6.25%;\n      top: 1rem;\n      width: 0;\n      z-index: 1;\n      transition: 0.4s cubic-bezier(0.6, 0, 0.7, 0.8) height, 0.4s cubic-bezier(0.6, 0, 0.7, 0.8) right, 0.4s cubic-bezier(0.6, 0, 0.7, 0.8) top, 0.4s width; }\n      input:checked ~ header::before {\n        height: 100%;\n        right: 0;\n        top: 0;\n        width: 100%;\n        transition: 0.4s height, 0.4s right, 0.4s top, 0.4s width cubic-bezier(0.6, 0, 0.7, 0.8); }\n    body > header nav {\n      visibility: hidden;\n      position: fixed;\n      width: 87.5%;\n      height: 100%;\n      left: 6.25%;\n      top: 0;\n      transform: translateX(100%);\n      z-index: 3;\n      transition: .4s transform, .3s opacity, visibility 0s .4s; }\n      input:checked ~ header nav {\n        visibility: visible;\n        transform: translateX(0%);\n        opacity: 1;\n        transition: 0.4s transform cubic-bezier(0.6, 0, 0.7, 0.8), 0.3s opacity 0.1s; }\n    body > header ul {\n      display: flex;\n      height: 100%;\n      flex-direction: column; }\n    body > header li {\n      display: flex;\n      flex-grow: 1;\n      align-items: center;\n      text-align: center;\n      margin-right: 0; }\n    body > header a {\n      width: 100%; }\n  .header_menu-button {\n    display: block;\n    font-size: 0.875rem;\n    position: absolute;\n    right: 6.25%;\n    top: 0.636875rem;\n    line-height: 2.2857142857;\n    color: #545454;\n    cursor: pointer;\n    transition: .2s color .2s, .3s box-shadow, margin-top .2s; }\n  .header_menu-icon {\n    margin-left: 1rem;\n    color: #545454;\n    z-index: 4; }\n  input:checked ~ header .header_menu-button {\n    font-size: 0;\n    color: rgba(84, 84, 84, 0);\n    transition: .2s color, 0s font-size .4s, margin-top .2s;\n    margin-top: 1.363125rem; }\n  input:checked ~ header .header_menu-icon {\n    color: #FAFAFA;\n    margin-left: 0; }\n  input:checked ~ header .header_menu::before {\n    content: \"\";\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 2; } }\n\n.why {\n  background: left top / cover;\n  background-color: #1564B3;\n  background-color: #061d33;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1480 560' preserveAspectRatio='xMinYMin slice'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cpath fill='%23092B4D' d='M447.25 384.894c9.53 9.983 20.846 20.691 32.75 32.506 11.895-11.805 23.202-22.504 32.727-32.48-4.66.052-7.874-1.075-10.465-3.075l-5.988 11.977c-5.858 11.715-22.863 10.823-27.462-1.44l-6.018-16.05-.676 1.165a15 15 0 0 1-12.975 7.474l-1.893-.077z'/%3E%3Cpath fill='%23092B4D' fill-rule='nonzero' d='M535.694 354.97c2.769-5.63 4.306-11.134 4.306-16.61 0-29.923-34.453-39.357-53.332-22.836-.655.677-1.678 1.704-3.07 3.082A32.999 32.999 0 0 0 480 323.64a33.353 33.353 0 0 0-3.59-5.036c-1.562-1.482-2.585-2.513-3.066-3.094C454.416 298.857 420 308.515 420 338.36c0 5.475 1.538 10.98 4.307 16.61h11.416c-3.886-6.356-5.723-11.783-5.723-16.61 0-10.89 6.397-18.279 16.216-20.408 9.898-2.146 19.982 1.864 25.144 10.723L480 343.5l8.64-14.825c5.116-8.78 15.222-12.8 25.13-10.684 9.841 2.1 16.23 9.45 16.23 20.369 0 4.83-1.84 10.258-5.722 16.61h11.416z'/%3E%3Cpath stroke='%23092B4D' stroke-linejoin='round' stroke-width='10' d='M420 369.971h29.143l16.571-28.571 17.143 45.714L500 352.829l11.429 17.142L540 369.97'/%3E%3Cg transform='rotate(90 -10 210)'%3E%3Cpath fill='%23092B4D' fill-rule='nonzero' d='M66.798 110c.68 1.317 1.383 2.645 2.108 3.983 13.31 24.542-14.375 30.342-42.418 36.817C.88 156.717-.079 169.433.004 191.667L.037 200l10-.04-.033-8.333c-.048-12.723.535-18.102 2.508-21.954 2.058-4.018 6.522-6.887 16.227-9.13l2.919-.673c20.72-4.78 29.7-7.53 37.911-12.896 13.022-8.509 16.468-21.714 8.544-36.974H66.798zM58.83 20C67.757 6.888 82.699 0 100.007 0c17.168 0 32.18 6.788 41.104 20h-13.06c-6.905-6.5-16.566-10-28.044-10-11.484 0-21.148 3.508-28.083 10H58.83zm74.34 90a233 233 0 0 1-2.062 3.983c-12.917 24.4 13.76 30.2 42.419 36.817 25.7 5.942 26.567 18.725 26.467 41.125l-.033 8.075-10-.041.033-8.079c.058-12.91-.51-18.287-2.477-22.167-2.05-4.042-6.508-6.92-16.24-9.17l-1.804-.416-1.805-.417c-20.176-4.672-29.51-7.596-37.59-13.04-12.638-8.514-15.858-21.573-8.169-36.67h11.26z'/%3E%3Cpath stroke='%23092B4D' stroke-linejoin='round' stroke-width='10' d='M0 130c7 0 19.887 6.238 31.144 4.172C52.786 130.202 50 118.946 50 110m120-35c21 0 31.784 13.367 30.315 33.037C198.776 128.654 213 155 240 155'/%3E%3Crect width='120' height='70' x='40' y='30' fill='%23092B4D' rx='5.833'/%3E%3C/g%3E%3Cpath stroke='%23092B4D' stroke-linejoin='round' stroke-width='10' d='M150 115h20m-20-20h20m-20-20h20M65 10v20m20-20v20m20-20v20'/%3E%3Cpath fill='%23092B4D' d='M99.146 60C97.087 54.174 91.531 50 85 50c-8.284 0-15 6.716-15 15 0 8.284 6.716 15 15 15 6.531 0 12.087-4.174 14.146-10H105V60h-5.854zM70 110.854V110H60v.854c-5.826 2.059-10 7.615-10 14.146 0 8.284 6.716 15 15 15 8.284 0 15-6.716 15-15 0-6.531-4.174-12.087-10-14.146zM30 90h10V80H30V48a8 8 0 0 1 8-8h94a8 8 0 0 1 8 8v94a8 8 0 0 1-8 8H38a8 8 0 0 1-8-8V90zm40 20c0-16.569-13.431-30-30-30v10c11.046 0 20 8.954 20 20h10zm-5 20a5 5 0 1 1 0-10 5 5 0 0 1 0 10zm20-60a5 5 0 1 1 0-10 5 5 0 0 1 0 10zm20-10v10a5 5 0 0 1 5 5h10c0-8.284-6.716-15-15-15zm5 90h10V75h-10v75z'/%3E%3Cpath stroke='%23092B4D' stroke-width='10' d='M70 222c2.909-32.738 43.767-50.367 81.969-37.458C190.17 197.45 225 115 170 115'/%3E%3Cg transform='translate(120 430)'%3E%3Cpath stroke='%23092B4D' stroke-width='10' d='M85 85v40h110V85H85zm40 40v-20h30v20h-30zm0-20V85h30v20h-30zm-20 20c-11.046 0-20-8.954-20-20s8.954-20 20-20 20 8.954 20 20-8.954 20-20 20zm70 0c-11.046 0-20-8.954-20-20s8.954-20 20-20 20 8.954 20 20-8.954 20-20 20z'/%3E%3Ccircle cx='105' cy='105' r='5' fill='%23092B4D'/%3E%3Ccircle cx='175' cy='105' r='5' fill='%23092B4D'/%3E%3Cpath stroke='%23092B4D' stroke-linejoin='round' stroke-width='10' d='M255 70c0-24.853-20.147-45-45-45m65 45c0-35.899-29.101-65-65-65m25 65c0-13.807-11.193-25-25-25'/%3E%3Cpath fill='%23092B4D' d='M190 46.25V40H90v20h10V50h80v10h10V46.25z'/%3E%3Cpath stroke='%23092B4D' stroke-linejoin='round' stroke-width='10' d='M55 120a5 5 0 0 0 5 5m-35-15c0 8.284 6.716 15 15 15m-25-15c0 8.284-6.716 15-15 15m45-5a5 5 0 0 1-5 5m15-5a5 5 0 0 0-5-5m-5 5a5 5 0 0 1 5-5m-25-5a5 5 0 0 0-5-5m-5 5a5 5 0 0 1 5-5'/%3E%3Cpath fill='%23092B4D' d='M60 120h10v10H60z'/%3E%3C/g%3E%3Cpath fill='%23092B4D' d='M840 138.573c0 26.943-24.107 45.165-24.107 66.427h-41.786c0-21.262-24.107-39.49-24.107-66.427C750 110.47 772.487 95 794.974 95 817.487 95 840 110.49 840 138.573zM815 245v-20c5.523 0 10 4.477 10 10s-4.477 10-10 10zm-105-10h105v10H710v-10zm63-20c-5.523 0-10 4.477-10 10s4.477 10 10 10m0-20h107v10H773zm9 40h20c0 2.761-4.477 5-10 5s-10-2.239-10-5z'/%3E%3Cpath stroke='%23092B4D' stroke-linejoin='round' stroke-width='10' d='M854 125c0-24.853-20.147-45-45-45m65 45c0-35.899-29.101-65-65-65M285 252.638V194.76c0-10.913 8.847-19.76 19.76-19.76h.48c10.913 0 19.76 8.847 19.76 19.76v57.878A29.94 29.94 0 0 1 335 275c0 16.569-13.431 30-30 30-16.569 0-30-13.431-30-30a29.94 29.94 0 0 1 10-22.362z'/%3E%3Cpath fill='%23092B4D' d='M300 260.854c-5.826 2.059-10 7.615-10 14.146 0 8.284 6.716 15 15 15 8.284 0 15-6.716 15-15 0-6.531-4.174-12.087-10-14.146V224.92a4.92 4.92 0 0 0-4.92-4.92h-.16a4.92 4.92 0 0 0-4.92 4.92v35.934zM340 190h40v10h-40zm10-20h10v20h-10zm0 70h10v70h-10zm-10-10h20v10h-20zm0-20h30v10h-30zm1085 330a5 5 0 0 1-5-5v-35h10v35a5 5 0 0 1-5 5zm-40 0a5 5 0 0 1-5-5v-35h10v35a5 5 0 0 1-5 5zm60-50h-80a5 5 0 0 1 0-10h80a5 5 0 0 1 0 10zm-75-30c0-19.33 15.67-35 35-35s35 15.67 35 35h-70zm70 20h-70v-20h70v20zm-20-10v-10h-30v10h30zm0-20v-10h-30v10h30zm-10-35h-10v-5h10z'/%3E%3Cg fill='%23092B4D'%3E%3Cpath fill-rule='nonzero' d='M535 50c0-16.569 13.431-30 30-30 16.569 0 30 13.431 30 30h-10c0-11.046-8.954-20-20-20s-20 8.954-20 20h-10zm10 0h-10c0-16.569 13.431-30 30-30 16.569 0 30 13.431 30 30h-10c0-11.046-8.954-20-20-20s-20 8.954-20 20z'/%3E%3Cpath d='M535 50h10v30h-10zm50 0h10v30h-10zm-15 90h5.854c2.059 5.826 7.615 10 14.146 10 8.284 0 15-6.716 15-15 0-8.284-6.716-15-15-15-6.531 0-12.087 4.174-14.146 10H570a5 5 0 0 1-5-5v-5h-10v50h10v-25a5 5 0 0 1 5-5zm-15.854-30c-2.059-5.826-7.615-10-14.146-10-8.284 0-15 6.716-15 15 0 8.284 6.716 15 15 15 6.531 0 12.087-4.174 14.146-10H555v-10h-.854zM525 90h80c5.523 0 10 4.477 10 10v60c0 5.523-4.477 10-10 10h-80c-5.523 0-10-4.477-10-10v-60c0-5.523 4.477-10 10-10zm15 30a5 5 0 1 1 0-10 5 5 0 0 1 0 10zm50 20a5 5 0 1 1 0-10 5 5 0 0 1 0 10zm-25-20c0-5.523-4.477-10-10-10v10h10z'/%3E%3C/g%3E%3Cpath stroke='%23092B4D' stroke-linejoin='round' stroke-width='10' d='M695 495h-35l-9.375-75H642.5a2.5 2.5 0 1 1 0-5h135a2.5 2.5 0 1 1 0 5h-8.125L760 495h-35'/%3E%3Cpath fill='%23092B4D' d='M694.146 460c-2.059-5.826-7.615-10-14.146-10-8.284 0-15 6.716-15 15 0 8.284 6.716 15 15 15 6.531 0 12.087-4.174 14.146-10H700a5 5 0 0 1 5 5v25h10v-50h-10v5a5 5 0 0 1-5 5h-5.854zm21.708-20H715v10h.854c2.059 5.826 7.615 10 14.146 10 8.284 0 15-6.716 15-15 0-8.284-6.716-15-15-15-6.531 0-12.087 4.174-14.146 10zM705 450h10v-10c-5.523 0-10 4.477-10 10zm-25 20a5 5 0 1 1 0-10 5 5 0 0 1 0 10zm50-20a5 5 0 1 1 0-10 5 5 0 0 1 0 10zm-25-120h10v70h-10z'/%3E%3Cpath fill='%23092B4D' d='M710.998 344.98a50.23 50.23 0 0 1-.998-9.99c0-27.28 21.848-49.458 49.002-49.99a50.23 50.23 0 0 1 .998 9.99c0 27.281-21.848 49.459-49.002 49.99zm-50-59.98c27.154.532 49.002 22.71 49.002 49.99a50.23 50.23 0 0 1-.998 9.99C681.848 344.45 660 322.271 660 294.99c0-3.421.344-6.762.998-9.99z'/%3E%3Cpath stroke='%23092B4D' stroke-linejoin='round' stroke-width='10' d='M565 395c0-13.807-11.193-25-25-25m395 80c0 13.807-11.193 25-25 25'/%3E%3Cpath fill='%23092B4D' d='M1359.214 47.452l89.33-10.968 6.093 49.627-79.404 9.75-16.019-48.41zm1.897 40.067l-16.873 2.072-3.656-29.776 11.91-1.463 8.62 29.167z'/%3E%3Cpath stroke='%23092B4D' stroke-linejoin='round' stroke-width='10' d='M1415.118 90.662l7.811 40.547h57.352'/%3E%3Cpath fill='%23092B4D' d='M1405 91.437L1424.851 89l1.219 9.925-19.851 2.437z'/%3E%3Cg transform='translate(1094.8 21)'%3E%3Cellipse cx='60.6' cy='100' stroke='%23092B4D' stroke-width='10' rx='35.4' ry='35'/%3E%3Cpath stroke='%23092B4D' stroke-width='10' d='M5 45h111.2v110H5z'/%3E%3Cpath fill='%23092B4D' d='M20.2 20h30.3v10H20.2z'/%3E%3Cellipse cx='95.95' cy='25' fill='%23092B4D' rx='5.05' ry='5'/%3E%3Cellipse cx='75.75' cy='25' fill='%23092B4D' rx='5.05' ry='5'/%3E%3Cpath stroke='%23092B4D' stroke-width='10' d='M5 5h111.2v40H5z'/%3E%3Cpath fill='%23092B4D' d='M20.2 99.56v.085C20.2 121.933 38.288 140 60.6 140c22.312 0 40.4-18.067 40.4-40.355v-.096l-7.276-.051c-11 4.967-23.05 4.606-33.211.09-10.193-4.585-22.235-4.943-33.23.022l-7.083-.05z'/%3E%3C/g%3E%3Cpath stroke='%23092B4D' stroke-linejoin='round' stroke-width='10' d='M1069.55 171c0 2.761 2.261 5 5.05 5m-35.35-15c0 8.284 6.783 15 15.15 15m-25.25-15c0 8.284-6.783 15-15.15 15m45.45-5c0 2.761-2.261 5-5.05 5m15.15-5c0-2.761-2.261-5-5.05-5m-5.05 5c0-2.761 2.261-5 5.05-5m-25.25-5c0-2.761-2.261-5-5.05-5m-5.05 5c0-2.761 2.261-5 5.05-5'/%3E%3Cpath fill='%23092B4D' d='M1074.6 171h10.1v10h-10.1z'/%3E%3Cg fill='%23092B4D'%3E%3Cpath fill-rule='nonzero' d='M1140 460c0 22.091-17.909 40-40 40s-40-17.909-40-40h10c0 16.569 13.431 30 30 30 16.569 0 30-13.431 30-30h10zm-10 0h10c0 22.091-17.909 40-40 40s-40-17.909-40-40h10c0 16.569 13.431 30 30 30 16.569 0 30-13.431 30-30z'/%3E%3Cpath d='M1095 499h10v21h-10zm18.42-2.093l8.66-5 10.5 18.186-8.66 5zm16.987-13.327l5-8.66 18.186 10.5-5 8.66zm-45.827 13.327l-8.66-5-10.5 18.186 8.66 5zm-14.986-13.327l-5-8.66-18.187 10.5 5 8.66z'/%3E%3Cpath fill-rule='nonzero' d='M1280 460c0 22.091-17.909 40-40 40s-40-17.909-40-40h10c0 16.569 13.431 30 30 30 16.569 0 30-13.431 30-30h10zm-10 0h10c0 22.091-17.909 40-40 40s-40-17.909-40-40h10c0 16.569 13.431 30 30 30 16.569 0 30-13.431 30-30z'/%3E%3Cpath d='M1235 499h10v21h-10zm18.42-2.093l8.66-5 10.5 18.186-8.66 5zm16.987-13.327l5-8.66 18.186 10.5-5 8.66zm-45.827 13.327l-8.66-5-10.5 18.186 8.66 5zm-14.986-13.327l-5-8.66-18.187 10.5 5 8.66z'/%3E%3C/g%3E%3Cpath stroke='%23092B4D' stroke-linejoin='round' stroke-width='10' d='M355 310c0 20-35.57 39.379-15 60 20.57 20.621 60 0 80 0m584.11-34.972c-.195 4.912 6.177 13.757 10.132 21.053 15.305 28.223-16.531 34.893-48.78 42.339C936.01 405.224 935 420 935.005 445l-.005 5m215-55c-18.92-.086-33.928-2.517-40.6-4.424-21.499-6.144-36.024-14.711-25.18-35.194 3.751-7.085 9.621-15.924 9.602-20.392'/%3E%3Cpath fill='%23092B4D' d='M995 285h15v40h-15c-5.523 0-10-4.477-10-10v-20c0-5.523 4.477-10 10-10z'/%3E%3Cpath stroke='%23092B4D' stroke-linejoin='round' stroke-width='10' d='M1095 275c0-30.376-20.147-50-45-50s-45 19.624-45 50'/%3E%3Cpath fill='%23092B4D' d='M1105 285h-15v40h15c5.523 0 10-4.477 10-10v-20c0-5.523-4.477-10-10-10z'/%3E%3Cpath stroke='%23092B4D' stroke-linejoin='round' stroke-width='10' d='M560.16 180.941c.16 80.941 29.985 85.326 73.111 49.059C676.398 193.733 680 240 710 240M565 390c0 70-56.517 32.817-35.212 94.848C551.093 546.878 710 560 710 500m200-25c-40 0-52.424-46.824-73.73 15.206C814.967 552.237 710 560 710 500'/%3E%3Cg transform='translate(1280 180)'%3E%3Cmask id='a' fill='%23fff'%3E%3Crect width='90' height='121.008' rx='45'/%3E%3C/mask%3E%3Cpath fill='%23092B4D' d='M85.931 79.463c.388 1.644 1.112 2.637 2.886 3.944.893.659 1.98 1.324 3.465 2.124.031.017 4.291 2.221 5.704 3.043l-5 8.706c-1.16-.647-5.187-2.732-5.413-2.853-1.867-1.006-3.337-1.905-4.659-2.88-3.576-2.637-5.73-5.588-6.712-9.753-.878-3.725-.843-8.407.346-14.164 1.883-6.461 2.947-13.06 3.383-20.034 1.215-19.454-13.44-36.217-32.732-37.442C27.908 8.929 11.284 23.706 10.07 43.16c-.503 8.054-2.558 11.408-6.494 13.907-1.799 1.143-4.035 2.077-6.461 2.726l-2.527-9.774c1.463-.375 2.773-.922 3.66-1.485.482-.306.627-.448.717-.596.122-.199.268-.525.439-1.083.32-1.05.57-2.465.686-4.328C1.65 17.514 23.024-1.485 47.828.09 72.632 1.665 91.473 23.218 89.91 48.23c-.418 6.695-1.37 13.093-2.817 19.174-1.193 6.264-1.581 10.284-1.163 12.059zm-44.108 24.395a78.967 78.967 0 0 1-6.276 4.409c-12.922 8.205-27.084 11.994-39.094 12.699l-.581-10.067c10.456-.614 23.025-3.977 34.346-11.165a64.915 64.915 0 0 0 8.911-6.787l7.172-7.333c2.09 12.694 8.648 22.79 18.905 30.353 2.608 1.923 5.225 3.525 8.24 5.147l-14.27 2.973c-7.487-5.574-13.35-12.345-17.353-20.229z' mask='url(%23a)'/%3E%3Cpath fill='%23092B4D' fill-rule='nonzero' d='M-4.71 100.832c8.902-.522 19.879-3.46 29.6-9.632 14.598-9.27 23.773-24.244 25.1-45.505.174-2.78-1.92-5.174-4.676-5.349-2.756-.175-5.13 1.936-5.304 4.715-1.121 17.96-8.516 30.029-20.45 37.606-8.119 5.156-17.503 7.667-24.85 8.098-2.757.162-4.862 2.546-4.702 5.326.16 2.78 2.526 4.903 5.282 4.74z' mask='url(%23a)'/%3E%3Cpath fill='%23092B4D' fill-rule='nonzero' d='M66.473 84.126c1.576 6.685 5.16 11.595 10.538 15.561 1.75 1.291 3.603 2.425 5.853 3.636.42.226 4.216 2.19 5.12 2.717 2.392 1.392 3.211 4.476 1.83 6.887a4.977 4.977 0 0 1-6.83 1.846c-.65-.38-4.215-2.224-4.83-2.555-2.631-1.416-4.866-2.784-7.045-4.39-7.182-5.297-12.195-12.164-14.365-21.37-1.63-6.914-1.533-14.829.437-23.855 1.543-5.065 2.428-10.484 2.79-16.274.52-8.338-5.76-15.522-14.028-16.047-8.268-.525-15.393 5.808-15.913 14.146-.916 14.657-6.53 23.821-15.798 29.706-4.546 2.887-9.71 4.774-14.385 5.767l-.29-10.27c3.473-.988 6.635-2.308 9.347-4.03 6.601-4.192 10.436-10.452 11.145-21.807.868-13.896 12.742-24.451 26.522-23.576 13.78.875 24.247 12.849 23.38 26.744-.339 5.422-1.094 10.576-2.237 15.453-2.395 8.606-2.638 15.782-1.24 21.71z' mask='url(%23a)'/%3E%3C/g%3E%3Cpath stroke='%23092B4D' stroke-linejoin='round' stroke-width='10' d='M880 220c50 0 50-44 134-44m391 234c0-16.569-13.431-30-30-30m-225 15c30 0 84.601 28.523 124.987 22.335C1316.224 411.017 1347 380 1375 380M120 555c-61.559-.263-74.309-56.375-75.002-95.204M170.08 75.236C245 75 261.59 25 290.793 24.674 319.995 24.345 331.489 45.256 370 40c38.511-5.256 89.758 13.365 70 70-19.758 56.635 20 130 60 130s60-30 60-60M170 95c39.836.377 186.307-14.196 185 75'/%3E%3C/g%3E%3C/svg%3E\");\n  color: #FAFAFA;\n  width: auto;\n  margin: 0;\n  padding: 4rem 10.8108108108%;\n  overflow: auto; }\n  .why_text {\n    float: left;\n    width: 58.6206896552%; }\n  .why h2 {\n    font-weight: 400; }\n  .why p {\n    font-weight: 100;\n    font-size: 1.375rem;\n    line-height: 1.4545454545;\n    padding-top: 0.429375rem;\n    padding-bottom: 0.570625rem; }\n  .why svg {\n    width: 27.5862068966%;\n    margin-left: 13.7931034483%;\n    height: auto; }\n  @media (max-width: 47.5em) {\n    .why {\n      padding: 1rem 6.25% 3rem; }\n      .why_text {\n        width: auto; }\n      .why p {\n        margin-left: 0;\n        width: auto; }\n      .why svg {\n        display: none; } }\n\n.how {\n  margin: 0;\n  width: 100%;\n  overflow: auto; }\n  .how svg {\n    (from: 3, until: 6): 30rem; }\n    @media (max-width: 116rem) {\n      .how svg {\n        (from: 3, until: 6): 29rem; } }\n    @media (max-width: 112rem) {\n      .how svg {\n        (from: 3, until: 6): 28rem; } }\n    @media (max-width: 108rem) {\n      .how svg {\n        (from: 3, until: 6): 27rem; } }\n    @media (max-width: 104rem) {\n      .how svg {\n        (from: 3, until: 6): 26rem; } }\n    @media (max-width: 100rem) {\n      .how svg {\n        (from: 3, until: 6): 25rem; } }\n    @media (max-width: 96rem) {\n      .how svg {\n        (from: 3, until: 6): 24rem; } }\n    @media (max-width: 92rem) {\n      .how svg {\n        (from: 3, until: 6): 23rem; } }\n    @media (max-width: 88rem) {\n      .how svg {\n        (from: 3, until: 6): 22rem; } }\n    @media (max-width: 84rem) {\n      .how svg {\n        (from: 3, until: 6): 21rem; } }\n    @media (max-width: 80rem) {\n      .how svg {\n        (from: 3, until: 6): 20rem; } }\n    @media (max-width: 76rem) {\n      .how svg {\n        (from: 3, until: 6): 19rem; } }\n    @media (max-width: 72rem) {\n      .how svg {\n        (from: 3, until: 6): 18rem; } }\n    @media (max-width: 68rem) {\n      .how svg {\n        (from: 3, until: 6): 17rem; } }\n    @media (max-width: 64rem) {\n      .how svg {\n        (from: 3, until: 6): 16rem; } }\n    @media (max-width: 60rem) {\n      .how svg {\n        (from: 3, until: 6): 15rem; } }\n    @media (max-width: 56rem) {\n      .how svg {\n        (from: 3, until: 6): 14rem; } }\n    @media (max-width: 52rem) {\n      .how svg {\n        (from: 3, until: 6): 13rem; } }\n    @media (max-width: 48rem) {\n      .how svg {\n        (from: 3, until: 6): 12rem; } }\n    @media (max-width: 44rem) {\n      .how svg {\n        (from: 3, until: 6): 11rem; } }\n    @media (max-width: 40rem) {\n      .how svg {\n        (from: 3, until: 6): 10rem; } }\n    @media (max-width: 36rem) {\n      .how svg {\n        (from: 3, until: 6): 9rem; } }\n    @media (max-width: 32rem) {\n      .how svg {\n        (from: 3, until: 6): 8rem; } }\n    @media (max-width: 28rem) {\n      .how svg {\n        (from: 3, until: 6): 7rem; } }\n    @media (max-width: 24rem) {\n      .how svg {\n        (from: 3, until: 6): 6rem; } }\n    @media (max-width: 20rem) {\n      .how svg {\n        (from: 3, until: 6): 5rem; } }\n    @media (max-width: 16rem) {\n      .how svg {\n        (from: 3, until: 6): 4rem; } }\n    @media (max-width: 12rem) {\n      .how svg {\n        (from: 3, until: 6): 3rem; } }\n    @media (max-width: 8rem) {\n      .how svg {\n        (from: 3, until: 6): 2rem; } }\n    @media (max-width: 4rem) {\n      .how svg {\n        (from: 3, until: 6): 1rem; } }\n  .how h2 {\n    margin-left: 10.8108108108%;\n    color: #18472C; }\n    @media (max-width: 47.5em) {\n      .how h2 {\n        margin-left: 0; } }\n  .how ul {\n    display: flex; }\n    @media (max-width: 47.5em) {\n      .how ul {\n        display: block; } }\n  .how li {\n    list-style: none; }\n\n.feature {\n  font-size: 1.625rem;\n  font-size: calc(1rem + 0.625 * ( (100vw - 47.5rem) / 45));\n  color: #FAFAFA;\n  font-weight: 100;\n  float: left;\n  width: 29.7297297297%;\n  padding: 2rem 1.3513513514%; }\n  .feature b, .feature strong {\n    font-weight: 400; }\n  .feature:first-child {\n    padding-left: 2.7027027027%; }\n  .feature:last-child {\n    padding-right: 2.7027027027%; }\n  .feature svg, .feature span {\n    vertical-align: middle; }\n  .feature svg {\n    height: 8rem;\n    width: 45.4545454545%;\n    margin-right: 9.0909090909%; }\n    @media (max-width: 80.9375rem) {\n      .feature svg {\n        height: 7rem; } }\n  .feature span {\n    display: inline-block;\n    width: 45.4545454545%;\n    line-height: 1.2307692308;\n    padding: 0.2003846154em 0 calc(1rem - 0.2003846154em); }\n  .feature_speed {\n    background: #0F2E1C; }\n  .feature_a11y {\n    background: #18472C; }\n  .feature_indepedent {\n    background: #20603C; }\n  @media (max-width: 47.5em) {\n    .feature {\n      font-size: 0.9375rem;\n      font-size: calc(0.9375rem + 0.9375 * ( (100vw - 20rem) / 27.5));\n      width: auto;\n      float: none;\n      padding: 1rem 6.25%;\n      box-sizing: border-box;\n      display: flex;\n      align-items: center; }\n      .feature:first-child {\n        padding-left: 6.25%; }\n      .feature svg, .feature span {\n        display: inline-block; }\n      .feature svg {\n        height: 9rem;\n        box-sizing: border-box;\n        width: 19.6428571429%;\n        height: 100%;\n        margin-left: 0;\n        margin-right: 7.1428571429%; } }\n  @media (max-width: 46.5454545455rem) {\n    .feature svg {\n      height: 8rem; } }\n  @media (max-width: 40.7272727273rem) {\n    .feature svg {\n      height: 7rem; } }\n  @media (max-width: 34.9090909091rem) {\n    .feature svg {\n      height: 6rem; } }\n  @media (max-width: 29.0909090909rem) {\n    .feature svg {\n      height: 5rem; } }\n  @media (max-width: 23.2727272727rem) {\n    .feature svg {\n      height: 4rem; } }\n  @media (max-width: 17.4545454545rem) {\n    .feature svg {\n      height: 3rem; } }\n  @media (max-width: 11.6363636364rem) {\n    .feature svg {\n      height: 2rem; } }\n  @media (max-width: 5.8181818182rem) {\n    .feature svg {\n      height: 1rem; } }\n  @media (max-width: 47.5em) {\n      .feature span {\n        width: 73.2142857143%;\n        line-height: 2.1333333333;\n        padding: 0.6516666667em 0; }\n      .feature:nth-child(even) svg {\n        order: 2;\n        margin-left: 7.1428571429%;\n        margin-right: 0; } }\n\n.with__tool_gulp::before, .with__tool_sass::before {\n  width: 9.0625%; }\n\n.with__tool_gulp::after, .with__tool_sass::after {\n  width: 9.375%; }\n\n.with__tool_html::before, .with__tool_svg::before {\n  width: 10.3125%; }\n\n.with__tool_html::after, .with__tool_svg::after {\n  width: 19.0625%; }\n\n.with__tool_html, .with__tool_svg {\n  font-weight: 500;\n  display: flex;\n  justify-content: center;\n  align-items: center; }\n\n.with {\n  width: auto;\n  margin: 3rem 0 5rem; }\n  .with h2 {\n    margin: 1rem 10.8108108108%; }\n    @media (max-width: 47.5em) {\n      .with h2 {\n        margin: 1rem 5.7142857143%; } }\n  .with svg {\n    font-weight: 500;\n    font-size: 52px;\n    vertical-align: middle;\n    width: 80%;\n    height: 100%; }\n  .with ul {\n    overflow: auto; }\n  .with__tool {\n    height: 14rem;\n    box-sizing: border-box;\n    margin-right: 2.7027027027%;\n    width: 21.6216216216%;\n    float: left;\n    background: center / contain no-repeat content-box;\n    position: relative;\n    list-style: none;\n    font-size: 0;\n    text-align: center; }\n    @media (max-width: 89.466rem) {\n      .with__tool {\n        height: 13rem; } }\n    @media (max-width: 82.584rem) {\n      .with__tool {\n        height: 12rem; } }\n    @media (max-width: 75.702rem) {\n      .with__tool {\n        height: 11rem; } }\n    @media (max-width: 68.82rem) {\n      .with__tool {\n        height: 10rem; } }\n    @media (max-width: 61.938rem) {\n      .with__tool {\n        height: 9rem; } }\n    @media (max-width: 55.056rem) {\n      .with__tool {\n        height: 8rem; } }\n    @media (max-width: 48.174rem) {\n      .with__tool {\n        height: 7rem; } }\n    .with__tool:first-child {\n      margin-left: 2.7027027027%; }\n    .with__tool::before, .with__tool::after {\n      content: \"\";\n      background: center / contain no-repeat content-box;\n      position: absolute;\n      top: 0;\n      left: 0;\n      height: 100%; }\n    .with__tool::after {\n      left: auto;\n      right: 0; }\n    .with__tool abbr {\n      display: block;\n      text-decoration: none; }\n    .with__tool_gulp {\n      background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='101' height='222' viewBox='0 0 101 222'%3E%3Cpath fill='%23DA1B1B' d='M77.932 215.241l2.131-35.47 5.886-10.034s-13.396 5.472-35.822 5.472c-22.426 0-35.619-5.371-35.619-5.371l6.596 10.945 2.334 34.458c0 3.694 12.198 6.689 27.247 6.689 15.048 0 27.247-2.995 27.247-6.689M93.88.561a.735.735 0 0 1 .154-.275c.637-.714 2.635-.046 4.464 1.491 1.827 1.538 2.793 3.363 2.156 4.077a.73.73 0 0 1-.15.129l.015.013-24.748 26.05-4.47 17.672c17.417 1.098 29.55 3.557 29.55 6.414 0 3.88-22.37 7.026-49.965 7.026-27.594 0-49.964-3.146-49.964-7.026s22.37-7.026 49.964-7.026c3.908 0 7.815.064 11.72.195l5.19-21.112L93.88.56zM76.904 128.54c.73 7.033 12.124.794 15.725-2.72l-4.4 39.646s-9.769 7.342-38.144 7.342c-28.374 0-37.794-7.458-37.794-7.458l-3.544-34.23c6.823 3.354 12.156-3.422 15.051-6.099.182 1.822-4.835 12.218-1.755 13.195 3.08.977 4.371-7.518 6.828-15.571 2.188-7.172 5.468-15.284 2.45-16.109-3.017-.825-3.949 7.036-5.328 9.689-1.96 3.766-13.537 16.451-14.922 7.037-1.088-7.384 7.144-22.195 10.972-25.95 1.92-1.882 4.889-3.62 7.022-3.078 2.956.75 3.21 5.86 5.706 5.718 5.897-.338-.987-10.29-6.145-10.556-11.338-.586-18.53 16.864-21.56 25.491L1.36 59.766s6.047 5.477 48.958 5.477c42.91 0 49.656-5.594 49.656-5.594l-6.703 60.39c-2.435 3.29-8.139 6.91-11.66 7.37-3.61.47 10.872-8.756 8.46-15.144-2.037-5.395-10.473.053-12.729 2.64.556-1.622.94-3.752-1.351-3.893-2.292-.141-2.134 6.5-5.572 10.532s-5.266 4.105-8.777 5.351c-3.511 1.247 3.934-15.219 8.24-25.185.917-2.124 3.025-7.82.467-8.665-2.557-.846-5.881 10.253-9.61 19.164-3.73 8.913-3.345 11.599-4.463 12.811-1.73 1.875-4.572 2.725-5.266 2.2-3.445-2.606 5.767-15.737 3.131-16.879-2.636-1.142-5.907 8.803-7.056 10.323-.136.18-6.275 8.405-8.53 6.685-1.318-1.003.653-5.906 2.36-9.806.776-1.772 3.738-6.335 1.273-7.345-2.464-1.011-12.376 19.021-6.1 21.42 4.778 1.826 8.759-2.57 10.533-5.718-.804 7.454 6.32 5.917 9.655 3.079 2.074 5.867 10.12-.398 12.315-2.01-1.902 6.377-8.687 17.116-5.732 18.723 2.955 1.608 7.461-11.452 8.778-14.514 3.593-8.357 7.148-16.335 14.29-16.744 3.318.262-9.61 8.45-9.023 14.105z'/%3E%3C/svg%3E\");\n      padding-right: 4.0540540541%;\n      padding-left: 4.0540540541%; }\n      .with__tool_gulp::before {\n        background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 29 64'%3E%3Cpath fill-rule='evenodd' d='M9.593 21.402C9.593 14.419 5.484 0 28.78 0v6.406c-15.688-.022-12.682 7.402-12.682 14.996 0 6-3.872 8.899-7.284 10.598 3.412 1.7 7.284 6.202 7.284 12.9 0 7.574-3.04 12.694 12.682 12.694V64C5.497 64 9.593 51.882 9.593 44.9c0-4.945-4.598-9.143-9.593-9.143V28.24c4.995.003 9.593-1.898 9.593-6.838z'/%3E%3Cstyle%3Esvg%7Bfill:%23da1b1b%7D%3C/style%3E%3C/svg%3E\"); }\n      .with__tool_gulp::after {\n        background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 64'%3E%3Cpath d='M29.571 28.243v7.517c-4.995 0-9.593 4.198-9.593 9.142C19.978 51.882 24.074 64 .792 64v-6.406c15.723 0 12.682-5.12 12.682-12.695 0-6.7 3.872-11.2 7.284-12.899-3.412-1.7-7.284-4.602-7.284-10.598 0-7.59 3.006-15.015-12.682-14.996V0c23.295 0 19.186 14.42 19.186 21.402 0 4.94 4.598 6.841 9.593 6.841z'/%3E%3Cstyle%3Esvg%7Bfill:%23da1b1b%7D%3C/style%3E%3C/svg%3E\"); }\n    .with__tool_sass {\n      background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='55' height='38' viewBox='0 0 55 38'%3E%3Cpath fill='%23C24282' fill-rule='nonzero' d='M45.908 21.482c-1.739.01-3.25.428-4.515 1.047-.464-.92-.928-1.738-1.01-2.34-.091-.7-.2-1.128-.091-1.965.109-.837.6-2.03.591-2.12-.009-.092-.109-.52-1.11-.529-1.001-.009-1.866.191-1.966.455-.1.264-.291.865-.419 1.484-.173.91-2.002 4.16-3.049 5.861-.336-.664-.628-1.247-.691-1.71-.091-.702-.2-1.13-.091-1.967.109-.837.6-2.03.591-2.12-.009-.091-.109-.52-1.11-.528-1.001-.01-1.866.19-1.966.455-.1.264-.21.883-.419 1.483-.21.601-2.64 6.026-3.276 7.427-.328.72-.61 1.293-.81 1.684 0 0-.01.027-.037.073-.173.337-.273.519-.273.519v.009c-.136.246-.282.473-.355.473-.054 0-.155-.655.018-1.547.364-1.884 1.229-4.815 1.22-4.915 0-.055.164-.564-.564-.828-.71-.264-.965.173-1.029.173-.064 0-.11.154-.11.154s.793-3.294-1.51-3.294c-1.438 0-3.422 1.574-4.405 2.994-.619.337-1.939 1.056-3.35 1.83-.537.3-1.092.6-1.61.882-.037-.036-.073-.082-.11-.118-2.785-2.976-7.936-5.079-7.718-9.074.082-1.457.583-5.28 9.894-9.921 7.663-3.777 13.761-2.73 14.817-.41 1.51 3.313-3.267 9.466-11.186 10.358-3.022.337-4.605-.828-5.006-1.265-.418-.455-.482-.483-.637-.392-.255.137-.09.547 0 .783.237.62 1.21 1.711 2.858 2.248 1.456.474 4.997.738 9.284-.919 4.796-1.857 8.546-7.017 7.445-11.34C33.102.183 25.82-1.264 18.93 1.185c-4.095 1.456-8.537 3.75-11.732 6.735-3.795 3.55-4.396 6.635-4.15 7.927.883 4.588 7.208 7.573 9.739 9.785-.128.072-.246.136-.346.19-1.265.629-6.09 3.15-7.29 5.817-1.366 3.021.218 5.188 1.265 5.479 3.249.901 6.59-.72 8.382-3.395 1.793-2.676 1.575-6.153.746-7.746a.19.19 0 0 0-.036-.054c.328-.191.664-.391.992-.583a48.394 48.394 0 0 1 1.83-1.028c-.31.846-.537 1.857-.647 3.313-.136 1.711.565 3.932 1.484 4.806.41.382.892.39 1.201.39 1.074 0 1.557-.891 2.094-1.947a38.041 38.041 0 0 0 1.247-2.794s-.738 4.06 1.265 4.06c.728 0 1.465-.947 1.793-1.43v.01s.018-.028.054-.092l.119-.19v-.019a78.71 78.71 0 0 0 1.92-3.586c1.256-2.476 2.467-5.57 2.467-5.57s.109.755.482 2.011c.219.738.674 1.548 1.038 2.33-.292.41-.474.637-.474.637l.01.01c-.237.309-.492.646-.774.973-.992 1.184-2.175 2.54-2.34 2.931-.19.464-.145.801.22 1.074.263.2.736.228 1.219.2.892-.063 1.52-.282 1.83-.418a6.14 6.14 0 0 0 1.574-.829c.974-.719 1.565-1.747 1.51-3.103-.027-.747-.272-1.493-.573-2.194.091-.127.173-.255.264-.382 1.538-2.248 2.73-4.715 2.73-4.715s.11.756.483 2.012c.182.637.555 1.329.883 2.002-1.447 1.174-2.34 2.54-2.658 3.432-.573 1.656-.127 2.402.72 2.575.382.082.928-.1 1.328-.273a6.053 6.053 0 0 0 1.684-.864c.974-.72 1.911-1.72 1.857-3.077-.028-.619-.191-1.228-.419-1.82 1.229-.51 2.812-.792 4.833-.555 4.332.51 5.188 3.213 5.024 4.35-.164 1.138-1.074 1.757-1.374 1.948-.3.191-.4.255-.373.391.036.2.182.192.436.155.355-.064 2.276-.92 2.358-3.013.136-2.675-2.412-5.597-6.917-5.57zM12.486 32.75c-1.438 1.566-3.44 2.157-4.305 1.657-.928-.537-.564-2.85 1.202-4.506 1.074-1.01 2.457-1.947 3.376-2.52.21-.128.52-.31.892-.538.064-.036.1-.054.1-.054l.219-.137c.646 2.366.027 4.45-1.484 6.098zm10.467-7.117c-.5 1.22-1.547 4.341-2.184 4.168-.546-.145-.883-2.512-.11-4.851.392-1.174 1.22-2.576 1.703-3.122.782-.874 1.647-1.165 1.856-.81.264.464-.955 3.85-1.265 4.615zm8.638 4.132c-.21.109-.41.182-.5.127-.065-.036.09-.182.09-.182s1.083-1.165 1.51-1.693c.247-.31.538-.673.847-1.083v.118c0 1.393-1.347 2.33-1.947 2.713zm6.662-1.52c-.155-.11-.127-.473.391-1.611.2-.446.674-1.193 1.484-1.912.091.292.155.574.146.838-.01 1.756-1.266 2.412-2.02 2.685z'/%3E%3C/svg%3E\");\n      padding-left: 4.7297297297%;\n      padding-right: 4.7297297297%; }\n      .with__tool_sass abbr {\n        height: 100%; }\n      .with__tool_sass::before {\n        background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 29 64'%3E%3Cpath fill-rule='evenodd' d='M9.593 21.402C9.593 14.419 5.484 0 28.78 0v6.406c-15.688-.022-12.682 7.402-12.682 14.996 0 6-3.872 8.899-7.284 10.598 3.412 1.7 7.284 6.202 7.284 12.9 0 7.574-3.04 12.694 12.682 12.694V64C5.497 64 9.593 51.882 9.593 44.9c0-4.945-4.598-9.143-9.593-9.143V28.24c4.995.003 9.593-1.898 9.593-6.838z'/%3E%3Cstyle%3Esvg%7Bfill:%23c24282%7D%3C/style%3E%3C/svg%3E\"); }\n      .with__tool_sass::after {\n        background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 64'%3E%3Cpath d='M29.571 28.243v7.517c-4.995 0-9.593 4.198-9.593 9.142C19.978 51.882 24.074 64 .792 64v-6.406c15.723 0 12.682-5.12 12.682-12.695 0-6.7 3.872-11.2 7.284-12.899-3.412-1.7-7.284-4.602-7.284-10.598 0-7.59 3.006-15.015-12.682-14.996V0c23.295 0 19.186 14.42 19.186 21.402 0 4.94 4.598 6.841 9.593 6.841z'/%3E%3Cstyle%3Epath%7Bfill:%23c24282%7D%3C/style%3E%3C/svg%3E\"); }\n    .with__tool_html {\n      color: #CC3D19;\n      padding-left: 3.1756756757%;\n      padding-right: 5.0675675676%; }\n      .with__tool_html svg {\n        height: 5.2967457253vw;\n        width: 4.6346525097vw;\n        margin-left: 0.2184225041vw; }\n      .with__tool_html span {\n        font-size: 2.8394925538vw;\n        height: 4.8653612796vw;\n        margin-top: 0.4313844457vw;\n        margin-left: -0.1184942085vw; }\n      .with__tool_html span {\n        float: left; }\n      .with__tool_html svg {\n        float: right;\n        order: 1; }\n      .with__tool_html::before {\n        background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 33 40'%3E%3Cpath fill-rule='evenodd' d='M32.72 31.132L10.176 20 32.72 8.84V-.052L.743 15.74v8.524L32.72 40.052z'/%3E%3Cstyle%3Esvg%7Bfill:%23cc3d19%7D%3C/style%3E%3C/svg%3E\"); }\n      .with__tool_html::after {\n        background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 61 64'%3E%3Cpath d='M60.515 27.74v8.524L28.627 52.052v-8.92L51.107 32l-22.48-11.16v-8.892L60.515 27.74zM24.828 0h-8.283L.558 64H8.82L24.828 0z'/%3E%3Cstyle%3Epath%7Bfill:%23cc3d19%7D%3C/style%3E%3C/svg%3E\"); }\n    .with__tool_svg {\n      color: #1564B3;\n      padding-left: 3.5810810811%;\n      padding-right: 5.472972973%; }\n      .with__tool_svg svg {\n        height: 6.9394829612vw;\n        width: 7.1580493537vw; }\n      .with__tool_svg span {\n        font-size: 2.8413631022vw;\n        height: 5.464159812vw;\n        margin-top: 1.4753231492vw; }\n      .with__tool_svg svg, .with__tool_svg span {\n        float: left; }\n      .with__tool_svg::before {\n        background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 33 40'%3E%3Cpath fill-rule='evenodd' d='M32.72 31.132L10.176 20 32.72 8.84V-.052L.743 15.74v8.524L32.72 40.052z'/%3E%3Cstyle%3Esvg%7Bfill:%231564b3%7D%3C/style%3E%3C/svg%3E\"); }\n      .with__tool_svg::after {\n        background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 61 64'%3E%3Cpath d='M60.515 27.74v8.524L28.627 52.052v-8.92L51.107 32l-22.48-11.16v-8.892L60.515 27.74zM24.828 0h-8.283L.558 64H8.82L24.828 0z'/%3E%3Cstyle%3Epath%7Bfill:%231564b3%7D%3C/style%3E%3C/svg%3E\"); }\n  @media (max-width: 47.5em) {\n    .with .with__tool_html, .with .with__tool_svg {\n      display: block; }\n      .with .with__tool_html svg, .with .with__tool_svg svg, .with .with__tool_html span, .with .with__tool_svg span {\n        float: none; }\n      .with .with__tool_html span, .with .with__tool_svg span {\n        font-size: inherit;\n        margin: 0; }\n      .with .with__tool_html svg, .with .with__tool_svg svg {\n        display: inline-block;\n        box-sizing: border-box;\n        width: 100%;\n        vertical-align: baseline; }\n    .with__tool {\n      background: none;\n      font-weight: 500;\n      height: auto;\n      padding: 0;\n      color: inherit;\n      font-size: 1rem;\n      line-height: 2;\n      margin-bottom: 0.415rem;\n      width: 17.1875%;\n      margin-right: 6.25%; }\n      .with__tool:first-child {\n        margin-left: 6.25%; }\n      .with__tool::after {\n        content: \"\";\n        background: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='15' height='16' viewBox='0 0 15 16'%3E%3Cpath fill='%23545454' fill-rule='evenodd' d='M14.984 9.031H8.813v6.172H6.234V9.031H.063V6.453h6.171V.266h2.579v6.187h6.171z'/%3E%3C/svg%3E\") center/contain no-repeat content-box;\n        display: inline-block;\n        position: absolute;\n        left: -36.3636363636%;\n        width: 36.3636363636%;\n        box-sizing: border-box;\n        padding: 0 .2rem;\n        height: 1.6rem;\n        top: auto;\n        bottom: 0.115rem; }\n      .with__tool:first-child::after {\n        content: none; }\n      .with__tool::before, .with__tool svg {\n        height: 10rem; } }\n\n@media (max-width: 45rem) {\n  .with__tool::before, .with__tool svg {\n    height: 9rem; } }\n\n@media (max-width: 40rem) {\n  .with__tool::before, .with__tool svg {\n    height: 8rem; } }\n\n@media (max-width: 35rem) {\n  .with__tool::before, .with__tool svg {\n    height: 7rem; } }\n\n@media (max-width: 30rem) {\n  .with__tool::before, .with__tool svg {\n    height: 6rem; } }\n\n@media (max-width: 25rem) {\n  .with__tool::before, .with__tool svg {\n    height: 5rem; } }\n\n@media (max-width: 20rem) {\n  .with__tool::before, .with__tool svg {\n    height: 4rem; } }\n\n@media (max-width: 15rem) {\n  .with__tool::before, .with__tool svg {\n    height: 3rem; } }\n\n@media (max-width: 10rem) {\n  .with__tool::before, .with__tool svg {\n    height: 2rem; } }\n\n@media (max-width: 5rem) {\n  .with__tool::before, .with__tool svg {\n    height: 1rem; } }\n  @media (max-width: 47.5em) {\n      .with__tool::before {\n        content: none;\n        box-sizing: border-box;\n        display: inline-block;\n        position: static;\n        width: 100%; }\n      .with__tool_gulp::before {\n        content: \"\";\n        background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='101' height='222' viewBox='0 0 101 222'%3E%3Cpath fill='%23DA1B1B' d='M77.932 215.241l2.131-35.47 5.886-10.034s-13.396 5.472-35.822 5.472c-22.426 0-35.619-5.371-35.619-5.371l6.596 10.945 2.334 34.458c0 3.694 12.198 6.689 27.247 6.689 15.048 0 27.247-2.995 27.247-6.689M93.88.561a.735.735 0 0 1 .154-.275c.637-.714 2.635-.046 4.464 1.491 1.827 1.538 2.793 3.363 2.156 4.077a.73.73 0 0 1-.15.129l.015.013-24.748 26.05-4.47 17.672c17.417 1.098 29.55 3.557 29.55 6.414 0 3.88-22.37 7.026-49.965 7.026-27.594 0-49.964-3.146-49.964-7.026s22.37-7.026 49.964-7.026c3.908 0 7.815.064 11.72.195l5.19-21.112L93.88.56zM76.904 128.54c.73 7.033 12.124.794 15.725-2.72l-4.4 39.646s-9.769 7.342-38.144 7.342c-28.374 0-37.794-7.458-37.794-7.458l-3.544-34.23c6.823 3.354 12.156-3.422 15.051-6.099.182 1.822-4.835 12.218-1.755 13.195 3.08.977 4.371-7.518 6.828-15.571 2.188-7.172 5.468-15.284 2.45-16.109-3.017-.825-3.949 7.036-5.328 9.689-1.96 3.766-13.537 16.451-14.922 7.037-1.088-7.384 7.144-22.195 10.972-25.95 1.92-1.882 4.889-3.62 7.022-3.078 2.956.75 3.21 5.86 5.706 5.718 5.897-.338-.987-10.29-6.145-10.556-11.338-.586-18.53 16.864-21.56 25.491L1.36 59.766s6.047 5.477 48.958 5.477c42.91 0 49.656-5.594 49.656-5.594l-6.703 60.39c-2.435 3.29-8.139 6.91-11.66 7.37-3.61.47 10.872-8.756 8.46-15.144-2.037-5.395-10.473.053-12.729 2.64.556-1.622.94-3.752-1.351-3.893-2.292-.141-2.134 6.5-5.572 10.532s-5.266 4.105-8.777 5.351c-3.511 1.247 3.934-15.219 8.24-25.185.917-2.124 3.025-7.82.467-8.665-2.557-.846-5.881 10.253-9.61 19.164-3.73 8.913-3.345 11.599-4.463 12.811-1.73 1.875-4.572 2.725-5.266 2.2-3.445-2.606 5.767-15.737 3.131-16.879-2.636-1.142-5.907 8.803-7.056 10.323-.136.18-6.275 8.405-8.53 6.685-1.318-1.003.653-5.906 2.36-9.806.776-1.772 3.738-6.335 1.273-7.345-2.464-1.011-12.376 19.021-6.1 21.42 4.778 1.826 8.759-2.57 10.533-5.718-.804 7.454 6.32 5.917 9.655 3.079 2.074 5.867 10.12-.398 12.315-2.01-1.902 6.377-8.687 17.116-5.732 18.723 2.955 1.608 7.461-11.452 8.778-14.514 3.593-8.357 7.148-16.335 14.29-16.744 3.318.262-9.61 8.45-9.023 14.105z'/%3E%3C/svg%3E\"); }\n      .with__tool_sass abbr {\n        height: auto; }\n      .with__tool_sass::before {\n        content: \"\";\n        background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='55' height='38' viewBox='0 0 55 38'%3E%3Cpath fill='%23C24282' fill-rule='nonzero' d='M45.908 21.482c-1.739.01-3.25.428-4.515 1.047-.464-.92-.928-1.738-1.01-2.34-.091-.7-.2-1.128-.091-1.965.109-.837.6-2.03.591-2.12-.009-.092-.109-.52-1.11-.529-1.001-.009-1.866.191-1.966.455-.1.264-.291.865-.419 1.484-.173.91-2.002 4.16-3.049 5.861-.336-.664-.628-1.247-.691-1.71-.091-.702-.2-1.13-.091-1.967.109-.837.6-2.03.591-2.12-.009-.091-.109-.52-1.11-.528-1.001-.01-1.866.19-1.966.455-.1.264-.21.883-.419 1.483-.21.601-2.64 6.026-3.276 7.427-.328.72-.61 1.293-.81 1.684 0 0-.01.027-.037.073-.173.337-.273.519-.273.519v.009c-.136.246-.282.473-.355.473-.054 0-.155-.655.018-1.547.364-1.884 1.229-4.815 1.22-4.915 0-.055.164-.564-.564-.828-.71-.264-.965.173-1.029.173-.064 0-.11.154-.11.154s.793-3.294-1.51-3.294c-1.438 0-3.422 1.574-4.405 2.994-.619.337-1.939 1.056-3.35 1.83-.537.3-1.092.6-1.61.882-.037-.036-.073-.082-.11-.118-2.785-2.976-7.936-5.079-7.718-9.074.082-1.457.583-5.28 9.894-9.921 7.663-3.777 13.761-2.73 14.817-.41 1.51 3.313-3.267 9.466-11.186 10.358-3.022.337-4.605-.828-5.006-1.265-.418-.455-.482-.483-.637-.392-.255.137-.09.547 0 .783.237.62 1.21 1.711 2.858 2.248 1.456.474 4.997.738 9.284-.919 4.796-1.857 8.546-7.017 7.445-11.34C33.102.183 25.82-1.264 18.93 1.185c-4.095 1.456-8.537 3.75-11.732 6.735-3.795 3.55-4.396 6.635-4.15 7.927.883 4.588 7.208 7.573 9.739 9.785-.128.072-.246.136-.346.19-1.265.629-6.09 3.15-7.29 5.817-1.366 3.021.218 5.188 1.265 5.479 3.249.901 6.59-.72 8.382-3.395 1.793-2.676 1.575-6.153.746-7.746a.19.19 0 0 0-.036-.054c.328-.191.664-.391.992-.583a48.394 48.394 0 0 1 1.83-1.028c-.31.846-.537 1.857-.647 3.313-.136 1.711.565 3.932 1.484 4.806.41.382.892.39 1.201.39 1.074 0 1.557-.891 2.094-1.947a38.041 38.041 0 0 0 1.247-2.794s-.738 4.06 1.265 4.06c.728 0 1.465-.947 1.793-1.43v.01s.018-.028.054-.092l.119-.19v-.019a78.71 78.71 0 0 0 1.92-3.586c1.256-2.476 2.467-5.57 2.467-5.57s.109.755.482 2.011c.219.738.674 1.548 1.038 2.33-.292.41-.474.637-.474.637l.01.01c-.237.309-.492.646-.774.973-.992 1.184-2.175 2.54-2.34 2.931-.19.464-.145.801.22 1.074.263.2.736.228 1.219.2.892-.063 1.52-.282 1.83-.418a6.14 6.14 0 0 0 1.574-.829c.974-.719 1.565-1.747 1.51-3.103-.027-.747-.272-1.493-.573-2.194.091-.127.173-.255.264-.382 1.538-2.248 2.73-4.715 2.73-4.715s.11.756.483 2.012c.182.637.555 1.329.883 2.002-1.447 1.174-2.34 2.54-2.658 3.432-.573 1.656-.127 2.402.72 2.575.382.082.928-.1 1.328-.273a6.053 6.053 0 0 0 1.684-.864c.974-.72 1.911-1.72 1.857-3.077-.028-.619-.191-1.228-.419-1.82 1.229-.51 2.812-.792 4.833-.555 4.332.51 5.188 3.213 5.024 4.35-.164 1.138-1.074 1.757-1.374 1.948-.3.191-.4.255-.373.391.036.2.182.192.436.155.355-.064 2.276-.92 2.358-3.013.136-2.675-2.412-5.597-6.917-5.57zM12.486 32.75c-1.438 1.566-3.44 2.157-4.305 1.657-.928-.537-.564-2.85 1.202-4.506 1.074-1.01 2.457-1.947 3.376-2.52.21-.128.52-.31.892-.538.064-.036.1-.054.1-.054l.219-.137c.646 2.366.027 4.45-1.484 6.098zm10.467-7.117c-.5 1.22-1.547 4.341-2.184 4.168-.546-.145-.883-2.512-.11-4.851.392-1.174 1.22-2.576 1.703-3.122.782-.874 1.647-1.165 1.856-.81.264.464-.955 3.85-1.265 4.615zm8.638 4.132c-.21.109-.41.182-.5.127-.065-.036.09-.182.09-.182s1.083-1.165 1.51-1.693c.247-.31.538-.673.847-1.083v.118c0 1.393-1.347 2.33-1.947 2.713zm6.662-1.52c-.155-.11-.127-.473.391-1.611.2-.446.674-1.193 1.484-1.912.091.292.155.574.146.838-.01 1.756-1.266 2.412-2.02 2.685z'/%3E%3C/svg%3E\");\n        padding-top: 34.5454545455%;\n        padding-bottom: 13.8181818182%; }\n      .with__tool_html svg {\n        padding-top: 36.3636363636%;\n        padding-bottom: 7.2727272727%; }\n      .with__tool_svg svg {\n        padding-top: 34.5454545455%;\n        padding-bottom: 10.2545454545%; } }\n\n.vcard {\n  padding: 0 2.7027027027% 3rem;\n  background-color: #E8E8E8;\n  background-image: radial-gradient(50% 4% at center top, rgba(84, 84, 84, 0.1), rgba(84, 84, 84, 0.1)), linear-gradient(rgba(84, 84, 84, 0.1), rgba(84, 84, 84, 0) 8%); }\n  @media (max-width: 47.5em) {\n    .vcard {\n      padding: 0 6.25% 1rem; } }\n  .vcard::after {\n    content: \"\";\n    clear: both;\n    display: block; }\n  .vcard picture, .vcard dl {\n    display: inline-block;\n    vertical-align: middle; }\n  .vcard h2, .vcard picture {\n    margin-left: 8.5714285714%; }\n  .vcard__link__list {\n    float: right;\n    font-size: 0.8125rem;\n    line-height: 1.2307692308;\n    padding: 1.1628125rem 0 0.8371875rem; }\n    .vcard__link__list a {\n      border-radius: 99em;\n      color: inherit;\n      display: inline-block;\n      text-decoration: none;\n      transition: .3s border, .3s box-shadow; }\n      .vcard__link__list a:hover {\n        box-shadow: 0 0.125rem 0.625rem rgba(84, 84, 84, 0.2), inset 0 0 0 0.0625rem #878787; }\n    @media (max-width: 47.5em) {\n      .vcard__link__list {\n        float: none;\n        text-align: right; } }\n  .vcard__link_with-text svg {\n    margin-left: 0.08140625rem; }\n  .vcard h2 {\n    font-size: 2.75rem;\n    line-height: 1.4545454545;\n    padding-top: 1.85875rem;\n    padding-bottom: 3.14125rem; }\n    @media (max-width: 92.5em) {\n      .vcard h2 {\n        padding-bottom: 2.14125rem; } }\n    @media (max-width: 47.5em) {\n      .vcard h2 {\n        margin-left: 0;\n        font-size: 1.5rem;\n        line-height: 1.3333333333;\n        padding: 0.3775rem 0 0.6225rem; } }\n  .vcard picture {\n    height: 14rem;\n    position: relative;\n    width: 14.2857142857%;\n    margin-right: 11.4285714286%;\n    font-size: 1.0810810811vw; }\n    @media (max-width: 91rem) {\n      .vcard picture {\n        height: 13rem; } }\n    @media (max-width: 84rem) {\n      .vcard picture {\n        height: 12rem; } }\n    @media (max-width: 77rem) {\n      .vcard picture {\n        height: 11rem; } }\n    @media (max-width: 70rem) {\n      .vcard picture {\n        height: 10rem; } }\n    @media (max-width: 63rem) {\n      .vcard picture {\n        height: 9rem; } }\n    @media (max-width: 56rem) {\n      .vcard picture {\n        height: 8rem; } }\n    @media (max-width: 49rem) {\n      .vcard picture {\n        height: 7rem; } }\n    @media (max-width: 42rem) {\n      .vcard picture {\n        height: 6rem; } }\n    @media (max-width: 35rem) {\n      .vcard picture {\n        height: 5rem; } }\n    @media (max-width: 28rem) {\n      .vcard picture {\n        height: 4rem; } }\n    @media (max-width: 21rem) {\n      .vcard picture {\n        height: 3rem; } }\n    @media (max-width: 14rem) {\n      .vcard picture {\n        height: 2rem; } }\n    @media (max-width: 7rem) {\n      .vcard picture {\n        height: 1rem; } }\n    .vcard picture img {\n      border-radius: 6249.9375rem;\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      max-width: 100%;\n      max-height: 100%;\n      transform: translate(-50%, -50%);\n      box-shadow: 0 0.375em 0.875em 0.125em rgba(84, 84, 84, 0.3), 0 0 1.25em 0.3125em rgba(84, 84, 84, 0.1); }\n    @media (max-width: 47.5em) {\n      .vcard picture {\n        height: 10rem;\n        width: 19.6428571429%;\n        margin: 0 40.1785714286% 1rem; } }\n\n@media (max-width: 45.8181818182rem) {\n  .vcard picture {\n    height: 9rem; } }\n\n@media (max-width: 40.7272727273rem) {\n  .vcard picture {\n    height: 8rem; } }\n\n@media (max-width: 35.6363636364rem) {\n  .vcard picture {\n    height: 7rem; } }\n\n@media (max-width: 30.5454545455rem) {\n  .vcard picture {\n    height: 6rem; } }\n\n@media (max-width: 25.4545454545rem) {\n  .vcard picture {\n    height: 5rem; } }\n\n@media (max-width: 20.3636363636rem) {\n  .vcard picture {\n    height: 4rem; } }\n\n@media (max-width: 15.2727272727rem) {\n  .vcard picture {\n    height: 3rem; } }\n\n@media (max-width: 10.1818181818rem) {\n  .vcard picture {\n    height: 2rem; } }\n\n@media (max-width: 5.0909090909rem) {\n  .vcard picture {\n    height: 1rem; } }\n  .vcard dl {\n    color: #545454;\n    width: 65.7142857143%;\n    display: inline-grid;\n    grid-template-columns: repeat(2, 47.8260869565%);\n    grid-template-rows: repeat(2, 2rem 3rem);\n    grid-gap: 1rem 4.347826087%; }\n    @media (max-width: 92.5em) {\n      .vcard dl {\n        grid-template-rows: repeat(2, 1rem 2rem); } }\n    @media (max-width: 47.5em) {\n      .vcard dl {\n        width: 100%;\n        grid-template-columns: repeat(2, 46.4285714286%);\n        grid-template-rows: repeat(2, 1rem 3rem);\n        grid-gap: 1rem 7.1428571429%; } }\n    @media (max-width: 31.875em) {\n      .vcard dl {\n        grid-template-rows: repeat(2, 1rem 2rem); } }\n  .vcard dt, .vcard dd {\n    grid-column: 1; }\n    .vcard dt:nth-of-type(2n), .vcard dd:nth-of-type(2n) {\n      grid-column: 2; }\n  .vcard dt {\n    font-size: 1.25rem;\n    font-size: calc(1.25rem + 0.5 * ( (100vw - 47.5em) / 45));\n    font-weight: 500;\n    grid-column-end: span 1;\n    grid-row: 1 / span 2; }\n    .vcard dt:nth-of-type(3), .vcard dt:nth-of-type(4) {\n      grid-row-start: 3; }\n    @media (max-width: 47.5em) {\n      .vcard dt {\n        font-size: calc(0.875rem + 0.875 * ( (100vw - 20em) / 27.5)); } }\n  .vcard dd {\n    font-size: 1rem;\n    font-size: calc(1rem + 0.5 * ( (100vw - 47.5em) / 45));\n    grid-row: 2; }\n    .vcard dd:nth-of-type(3), .vcard dd:nth-of-type(4) {\n      grid-row: 4; }\n    @media (max-width: 47.5em) {\n      .vcard dd {\n        font-size: calc(0.75rem + 0.75 * ( (100vw - 20em) / 27.5)); } }\n\n.icon {\n  position: relative;\n  padding-left: 27.2727272727%; }\n  .icon::before {\n    background: center / contain no-repeat;\n    content: \"\";\n    display: inline-block;\n    float: left;\n    height: 100%;\n    margin-right: 9.0909090909%;\n    min-height: 1rem;\n    width: 18.1818181818%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    padding: .3em;\n    box-sizing: border-box;\n    background-origin: content-box; }\n  .icon + dd {\n    padding-left: 27.2727272727%; }\n  .icon.icon_leaf::before {\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='18' height='14' viewBox='0 0 18 14'%3E%3Cpath fill='%23545454' d='M4.394 1.512C.836 3.576 1.04 6.939 1.163 8.182c4.595-5.443 11.47-5.179 11.47-5.179S2.887 6.345.025 13.048c-.226.529 1.06 1.217 1.355.591.876-1.864 2.097-3.262 2.097-3.262 1.801.67 4.918 1.457 7.127-.098 2.934-2.065 2.634-6.642 6.822-8.87.979-.52-8.21-2.697-13.033.103z'/%3E%3C/svg%3E\"); }\n  .icon.icon_bed::before {\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='18' height='15' viewBox='0 0 18 15'%3E%3Cpath fill='%23545454' d='M17.465 9.444H.035l1.926-3.05V.784L2.746 0h12.008l.784.784v5.61l1.927 3.05zM13.97 1.568H3.53v3.915c1.01-.262 2.756-.584 5.22-.584s4.21.322 5.22.584V1.568zm-1.068 2.973s-1.037-.261-1.75-.329c-.641-.06-1.766-.129-1.766-.129V3.17c0-.543.787-.982 1.758-.982s1.758.44 1.758.982v1.37zm-4.788-.458s-1.125.068-1.766.13c-.713.067-1.75.328-1.75.328V3.17c0-.543.787-.982 1.758-.982.97 0 1.758.44 1.758.982v.913zM0 10.41h17.5v1.568h-1.827v2.16h-1.568v-2.16H3.395v2.16H1.827v-2.16H0V10.41z'/%3E%3C/svg%3E\"); }\n  .icon.icon_hourglass::before {\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='18' height='27' viewBox='0 0 18 27'%3E%3Cpath fill='%23545454' d='M15.874 7.786A6.897 6.897 0 0 0 17.5 3.372V0H0v3.372c0 1.596.577 3.163 1.626 4.413l3.376 4.025c.62.74.624 1.778.01 2.523l-3.424 4.15A6.9 6.9 0 0 0 0 22.851v3.398h17.5v-3.398a6.897 6.897 0 0 0-1.59-4.369l-3.423-4.15a1.949 1.949 0 0 1 .01-2.522l3.377-4.025zM10.8 15.724l3.423 4.15c.713.866 1.09 1.887 1.09 3.095h-1.161C13.285 20.763 8.75 17.5 8.75 17.5s-4.536 3.263-5.403 5.469h-1.16c0-1.208.376-2.23 1.09-3.094l3.422-4.15a4.16 4.16 0 0 0-.02-5.32L3.302 6.38c-.722-.859-1.115-1.899-1.115-3.1h13.124a4.706 4.706 0 0 1-1.115 3.1l-3.377 4.025a4.16 4.16 0 0 0-.02 5.319z'/%3E%3C/svg%3E\"); }\n  .icon.icon_unicycle::before {\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='18' height='31' viewBox='0 0 18 31'%3E%3Cpath fill='%23545454' d='M7.864 6.392c-3.581 0-5.554-.9-5.554-2.532C2.31 2.001 3.194 0 5.135 0c.603 0 1.285.188 2.028.56 3.387 1.693 8.54 1.712 8.59 1.712.175 0 .318.143.318.318v1.747a.315.315 0 0 1-.093.224c-.992.993-4.708 1.831-8.113 1.831zm0 1.482c.94 0 1.957-.063 2.967-.185v4.108a10.224 10.224 0 0 0-4.128 0V7.84c.371.022.757.034 1.161.034zm-2.12 17.368h-.542l2.246-3.369c-.002-.023-.004-.047-.004-.07 0-.753.594-1.366 1.323-1.366.73 0 1.323.613 1.323 1.365 0 .606-.385 1.12-.916 1.298l-1.949 2.923a1.79 1.79 0 0 0-1.482-.78zM.038 26.89a.317.317 0 0 1 .279-.166h5.425c.109 0 .209.055.267.146l1.631 2.535a.317.317 0 0 1-.267.489H1.948a.316.316 0 0 1-.267-.146l-1.63-2.534a.318.318 0 0 1-.012-.324zm8.728-13.82a8.731 8.731 0 1 1 .131 17.462 1.798 1.798 0 0 0-.011-1.929l-1.214-1.888a5.04 5.04 0 0 0 6.14-4.913 5.04 5.04 0 0 0-5.046-5.034 5.04 5.04 0 0 0-5.046 5.034c0 1.331.52 2.54 1.366 3.44H.739A8.733 8.733 0 0 1 8.767 13.07z'/%3E%3C/svg%3E\"); }\n  @media (max-width: 47.5em) {\n    .icon {\n      padding-left: 0; }\n      .icon::before {\n        position: static;\n        padding: 0;\n        float: left;\n        width: 1.25em;\n        margin-right: 1.4285714286em; }\n      .icon + dd {\n        padding-left: 3.125em; }\n      .icon:nth-of-type(2n) {\n        text-align: right; }\n        .icon:nth-of-type(2n)::before {\n          float: right;\n          margin: 0 0 0 9.0909090909%; }\n        .icon:nth-of-type(2n) + dd {\n          text-align: right;\n          padding-left: 0;\n          padding-right: 3.125em; } }\n\nmain {\n  transition: transform .2s linear; }\n\nsection {\n  width: 78.3783783784%;\n  margin: 0 10.8108108108%; }\n  @media (max-width: 47.5em) {\n    section {\n      width: auto;\n      margin: 0 6.25%; } }\n\nh1 {\n  margin: 0;\n  font-weight: 200;\n  display: inline-block;\n  font-size: 4.5rem;\n  line-height: 1.3333333333;\n  margin-top: 0.1325rem;\n  margin-bottom: 0.8675rem; }\n  h1 span {\n    color: #DA1B1B;\n    font-weight: 400; }\n  @media (max-width: 92.5em) {\n    h1 {\n      font-size: 3.5rem;\n      line-height: 1.4285714286;\n      margin-top: 0.0475rem;\n      margin-bottom: 0.9525rem; } }\n  @media (max-width: 69.375rem) {\n    h1 {\n      font-size: 2.5rem;\n      line-height: 1.2;\n      margin-top: 0.4625rem;\n      margin-bottom: 0.5375rem; } }\n  @media (max-width: 47.5em) {\n    h1 {\n      font-size: 1.5rem;\n      line-height: 1.3333333333;\n      margin-top: 0.3775rem;\n      margin-bottom: 0.6225rem; } }\n\n.intro h1 {\n  padding-top: 8rem;\n  padding-bottom: 8rem; }\n  @media (max-width: 92.5em) {\n    .intro h1 {\n      padding-top: 5rem;\n      padding-bottom: 5rem; } }\n  @media (max-width: 47.5em) {\n    .intro h1 {\n      padding-top: 2rem;\n      padding-bottom: 2rem; } }\n\nh2 {\n  font-size: 5.625rem;\n  line-height: 1.2444444444;\n  padding-top: 0.165625rem;\n  padding-bottom: 0.834375rem; }\n  @media (max-width: 1380px) {\n    h2 {\n      font-size: 3.375rem;\n      line-height: 1.4814814815;\n      padding-top: 0.099375rem;\n      padding-bottom: 0.900625rem; } }\n  @media (max-width: 47.5em) {\n    h2 {\n      text-align: center;\n      font-size: 1.875rem;\n      line-height: 1.6;\n      padding-top: 0.721875rem;\n      padding-bottom: 0.278125rem; } }\n","$scale: 1.414213562; // sqrt(1^2+1^2) - sqrt(100%^2+100%^2) - a^2+b^2=c^2\n$inset: 0%;\n$path-height-perc: 10%;\n\n$left: $inset + $path-height-perc;\n$elem-width: (100% - $left*2)/2*$scale;\n\n// TODO: set transition to only the needed properties\n\n%el-base--menu-icon{\n\tdisplay: inline-block;\n\tposition: relative;\n}\n%el-base--menu-icon_path{\n\tbackground: currentColor;\n\tposition: absolute;\n\twidth: $elem-width; \t\t\t\t\t\t\t// a & c\n\ttransform-origin: left center; \t\t\t\t\t// a & b\n\ttop: (100% - $inset - $path-height-perc * 1.5); // b & c\n\tleft: $left;\n}\n%el-base--menu-icon_path--a{\n\ttop: $inset + $path-height-perc/2;\n}\n%el-base--menu-icon_path--b{\n\twidth: 100%-$left*2;\n}\n%el-base--menu-icon_path--c{\n\ttransform-origin: right center;\n}\n\n@mixin el-menu-icon($width, $duration: .3s, $delay: 0s){\n\t$path-height: $width/100%*$path-height-perc;\n\n\t.menu-icon{\n\t\twidth: $width;\n\t\theight: $width;\n\t\ttransition: $duration all $delay;\n\t\t&_path{\n\t\t\theight: $path-height;\n\t\t\tborder-radius: $path-height/2;\n\t\t\ttransition: $duration transform cubic-bezier(0,0,.4,1.2) $delay,\n\t\t\t\t\t\t$duration height $delay;\n\t\t\t&.path--b{\n\t\t\t\t// original position: 100% - $height / 2\n\t\t\t\ttransform: translateY($width * -(100%-$left*2)/2/100%);\n\t\t\t}\n\t\t}\n\t}\n\t@at-root .menu-icon{\n\t\t@extend %el-base--menu-icon;\n\t\t&_path{\n\t\t\t@extend %el-base--menu-icon_path;\n\t\t\t&.path--a{\n\t\t\t\t@extend %el-base--menu-icon_path--a;\n\t\t\t}\n\t\t\t&.path--b{\n\t\t\t\t@extend %el-base--menu-icon_path--b;\n\t\t\t}\n\t\t\t&.path--c{\n\t\t\t\t@extend %el-base--menu-icon_path--c;\n\t\t\t}\n\t\t}\n\t}\n}\n\n@mixin el-menu-icon--hover($width, $duration, $delay){\n\t.menu-icon{\n\t\t$path-height: $width/100%*$path-height-perc;\n\n\t\twidth: $width;\n\t\theight: $width;\n\t\ttransition: $duration all $delay;\n\t\t&_path{\n\t\t\theight: $path-height;\n\t\t\tborder-radius: $path-height/2;\n\t\t\ttransition: $duration transform cubic-bezier(0,0,.4,1.2) $delay,\n\t\t\t\t\t\t$duration height $delay;\n\t\t\t&.path--a{\n\t\t\t\ttransform: \trotate(45deg);\n\t\t\t}\n\t\t\t&.path--b{\n\t\t\t\ttransform: \trotate(-45deg) scaleX($scale);\n\t\t\t}\n\t\t\t&.path--c{\n\t\t\t\t// 100% - $offset*2 - $elem-width\n\t\t\t\ttransform: \ttranslateX($width * (100% - $elem-width - $left*2)/100%)\n\t\t\t\t\t\t\trotate(45deg);\n\t\t\t}\n\t\t}\n\t}\n}\n","@import \"menu-icon\";\n\n// Desktop UI\nbody > header {\n\t@include el-menu-icon(1rem, .3s, 0s);\n\t// $config: \t_base-settings((font-size: rem(20px), add-rows-to-line-height: 0));\n\t$font-size: rem(20px);\n\tfont-size: \t\t\t$font-size;\n\tline-height: \t\tline-height($font-size);\n\tpadding-bottom:\tbottom($font-size);\n\tpadding-top: \t\ttop($font-size) + row();\n\ttext-align: right;\n\t// overflow: auto;\n\n\t@at-root .header_menu-button {\n\t\tdisplay: none;\n\t}\n\n\tli {\n\t\tdisplay: inline-block;\n\t\tmargin-right: gutter();\n\t}\n\n\ta {\n\t\tcolor: inherit;\n\t\ttext-decoration: none;\n\t}\n\n\t// Home icon\n\tsvg {\n\t\theight: (1em / 22 * 20);\n\t\twidth: 1em;\n\t}\n}\n\n// Mobile UI\n@media (max-width: 760px) {\n\t$trigger: \"input:checked ~ header\";\n\n\tbody > header {\n\t\t// TODO: fix menu items on baseline\n\t\tcolor: $color-white;   // text color of MENU\n\t\tfont-size: rem(20px);\n\t\theight: row() * 3;   \t// fake height of .header_menu\n\t\tpadding: 0;          \t // reset desktop\n\n\t\t@at-root #{$trigger} {\n\t\t\t@include el-menu-icon--hover(2rem, .3s, .1s);\n\t\t}\n\n\t\t// BACKGROUND\n\t\t// TODO: make sure that the background is never visible\n\t\t&::before {\n\t\t\tbackground: $color-red-transparent;\n\t\t\tcontent: \"\";\n\t\t\tdisplay: block;\n\n\t\t\t// position element at the right side of the menu button\n\t\t\theight: row();\n\t\t\tposition: fixed;\n\t\t\tright: gutter($small);\n\t\t\ttop: row();\n\t\t\twidth: 0;\n\n\t\t\tz-index: 1;         // lowest element\n\n\t\t\t// closing transition: width, then height\n\t\t\ttransition: .4s cubic-bezier(.6, 0, .7, .8) height,\n\t\t\t.4s cubic-bezier(.6, 0, .7, .8) right,\n\t\t\t.4s cubic-bezier(.6, 0, .7, .8) top,\n\t\t\t.4s width;\n\n\t\t\t@at-root #{$trigger} {\n\t\t\t\t&::before {\n\t\t\t\t\t// cover the screen\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tright: 0;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\twidth: 100%;\n\n\t\t\t\t\t// closing transition: height + position, then width\n\t\t\t\t\ttransition: .4s height, .4s right, .4s top, .4s width cubic-bezier(.6, 0, .7, .8);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// MENU\n\t\t// TODO: make sure that `nav` is not visible when the menu is closed\n\t\tnav {\n\t\t\tvisibility: hidden;\n\n\t\t\t// cover the screen\n\t\t\tposition: fixed;\n\t\t\twidth: span(4, $small);\n\t\t\theight: 100%;\n\t\t\tleft: gutter($small);\n\t\t\ttop: 0;\n\n\t\t\ttransform: translateX(100%); // hide offscreen\n\t\t\tz-index: 3; // above bg, beneath close button\n\t\t\ttransition: .4s transform, .3s opacity, visibility 0s .4s;\n\t\t\t@at-root #{$trigger} nav {\n\t\t\t\tvisibility: visible;\n\t\t\t\ttransform: translateX(0%);\n\t\t\t\topacity: 1;\n\t\t\t\ttransition: .4s transform cubic-bezier(.6, 0, .7, .8), .3s opacity .1s;\n\t\t\t}\n\t\t}\n\n\t\t// Divide elements on avaible space and center it\n\t\tul {\n\t\t\tdisplay: flex;\n\t\t\theight: 100%;\n\t\t\tflex-direction: column;\n\t\t}\n\n\t\tli {\n\t\t\tdisplay: flex;\n\t\t\tflex-grow: 1;\n\t\t\talign-items: center;\n\t\t\ttext-align: center;\n\t\t\tmargin-right: 0;    // reset of desktop menu\n\t\t}\n\n\t\ta {\n\t\t\twidth: 100%;\n\t\t}\n\t}\n\n\t// MENU BUTTON\n\t// TODO: cleaner overwrite of color in the menu icon\n\t.header_menu {\n\t\t$font-size: rem(14px);\n\n\t\t&-button {\n\t\t\tdisplay: block;\n\t\t\tfont-size: $font-size;\n\n\t\t\t// place menu button in reserved space + align to baseline grid\n\t\t\tposition: absolute;\n\t\t\tright: gutter($small);\n\t\t\ttop: top($font-size);\n\t\t\tline-height: line-height($font-size);\n\n\t\t\tcolor: $color-black;\n\t\t\tcursor: pointer;\n\t\t\ttransition: .2s color .2s, .3s box-shadow, margin-top .2s;\n\n\t\t\t// TODO: create nicer outline when focused\n\t\t}\n\n\t\t&-icon {\n\t\t\tmargin-left: row();\n\t\t\tcolor: $color-black;\n\t\t\tz-index: 4;         // most top element in overlay\n\t\t}\n\n\t\t@at-root #{$trigger} & {\n\t\t\t&-button {\n\t\t\t\t// Make sure that only the close button occupies space\n\t\t\t\tfont-size: 0;\n\n\t\t\t\t// show the transition of transparent <--> black\n\t\t\t\tcolor: change-color($color-black, $alpha: 0);\n\t\t\t\ttransition: .2s color, 0s font-size .4s, margin-top .2s;\n\t\t\t\tmargin-top: row() * 2 - top($font-size);\n\t\t\t}\n\n\t\t\t&-icon {\n\t\t\t\tcolor: $color-white;\n\t\t\t\tmargin-left: 0;\n\t\t\t}\n\n\t\t\t// closes the overlay when pressed on background\n\t\t\t&::before {\n\t\t\t\tcontent: \"\";\n\t\t\t\tposition: fixed;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t\tright: 0;\n\t\t\t\tbottom: 0;\n\t\t\t\tz-index: 2;\n\t\t\t}\n\n\t\t}\n\t}\n}","////\n///  @group Math\n////\n\n//* Base math row height\n/// Calculates and returns a CSS-ready row height,\n/// based on normalized span and context data –\n/// a low-level version of `susy-span`,\n/// with all of the logic and none of the syntax sugar.\n///\n/// @param {number} $rows \t\t\tNumber of rows to span\n/// @param {number} $root-font-size\tBase font-size\n/// @param {number} $row-height \tHeight of the row\n///\n/// @return {number} \t\t\t\tHeight of `x` rows on the grid\n@function _base-math-row-height(\n\t$rows,\n\t$row-height,\n\t$root-font-size\n){\n\t@return $rows * $row-height * $root-font-size;\n}\n\n//* Base math rows\n/// Calculates and returns amount of rows needed for given font-size\n///\n/// @param {number} $font-size \t\t\tFont-size to calculate on\n/// @param {number} $add-line-height \tExtra rows to span for each text row\n/// @param {number} $root-font-size \tBase font-size\n/// @param {number} $row-height\t\tRow height\n/// @param {number} $min-line-height\tMinimum line-height to use\n///\n/// @return {number} \t\t\t\t\tRows needed to fit defined settings\n@function _base-math-rows(\n\t$font-size,\n\t$add-rows-to-line-height,\n\t$root-font-size,\n\t$row-height,\n\t$min-line-height\n){\n\t$row-height: _base-math-row-height(1, $root-font-size, $row-height);\n\n\t// calculate minimum amount of rows given by the font-size\n\t// -> the desired font-size divided by set row height rounded upwards\n\t$rows-font-size: ceil(($font-size + .00001) / $row-height);\n\t$total-rows: $rows-font-size + $add-rows-to-line-height;\n\n\t// calculate minimum amount of rows given by the minimum line-height\n\t$rows-line-height: ceil(($min-line-height * $font-size / $root-font-size));\n\t// @return $rows-line-height;\n\t@return if($total-rows < $rows-line-height, $rows-line-height, $total-rows);\n}\n\n//* Base math line-height\n/// Calculates the line-height with set font-size and given rows\n///\n/// @param {number} $rows \t\t\tAmount of rows used\n/// @param {number} $font-size \t\tFont-size used\n/// @param {number} $root-font-size \tBase font-size\n/// @param {number} $row-height\tRow height\n///\n/// @return {number} \t\t\t\tUnitless line-height\n@function _base-math-line-height(\n\t$rows,\n\t$font-size,\n\t$root-font-size,\n\t$row-height\n){\n\t@return _base-math-row-height($rows, $row-height, $root-font-size) / $font-size;\n}\n\n//* Base math shoulder top\n/// Calculates the top offset needed to set the font on the baseline\n///\n/// @param {number} $font-size \t\tFont-size to calculate on\n/// @param {number} $line-height \tLine-height used\n/// @param {number} $cap-height\tCap-height of used font\n///\n/// @return {number} \t\t\t\tTop shoulder height\n@function _base-math-shoulder-top(\n\t$font-size,\n\t$line-height,\n\t$cap-height\n){\n\t@return .5 * ($line-height - $cap-height) * $font-size;\n}\n\n//* Base math shoulder bottom\n/// Calculates the bottom offset needed to keep the height in perfect rows\n///\n/// @param {number} $font-size \t\tFont-size to calculate on\n/// @param {number} $line-height \tLine-height used\n/// @param {number} $root-font-size \tBase font-size\n/// @param {number} $row-height\tRow height\n/// @param {number} $cap-height\tCap-height of used font\n///\n/// @return {number} \t\t\t\tBottom shoulder height\n@function _base-math-shoulder-bottom(\n\t$font-size,\n\t$line-height,\n\t$root-font-size,\n\t$row-height,\n\t$cap-height\n){\n\t@if not _base-valid-unit($font-size, $root-font-size) {\n\t\t@return _base-error(\n\t\t\t\"Can't calculate rhythm with 2 different units, \" + unit($font-size) + \"*\" unit($root-font-size),\n\t\t\t\"_base-math-shoulder-bottom\"\n\t\t);\n\t}\n\n\t$row-height: _base-math-row-height(1, $root-font-size, $row-height);\n\t$shoulder-height: _base-math-shoulder-top($font-size, $line-height, $cap-height);\n\n\t// Height in use, 1 row of text + top shoulder\n\t$used-height: $line-height * $font-size + $shoulder-height;\n\n\t// Row height minus the used height that overlaps less than 1 row (remainder)\n\t$remainder: ($used-height % $row-height);\n\n\t// if nothing is remaining remove the full row\n\t$height-to-remove: if($remainder == 0, $row-height, $remainder);\n\n\t@return $row-height - $height-to-remove;\n}","////\n///  relative is limited to shoulders and could overlap over multiple rows\n///\n///  @group functions\n////\n\n/// Base API Functions\n/// =======\n/// Base has 5 functions that form the core of Base vertical grid API.\n///\n/// All five functions come with an unprefixed alias by default, using the `base` import.\n/// Import the `base-prefix` partial instead, if you only only want prefixed versions of the API.\n///\n/// ## Text functions\n/// - Use `line-height()`, `top()` and `bottom()` to set text on the baseline\n///   and apply the results wherever you need them:\n///   CSS `line-height`, `margin`, `padding`, etc.\n/// - Use `font-size()` to get the default font-size\n///\n///\t@see base-font-size\n///\t@see base-line-height\n///\t@see base-top\n///\t@see base-bottom\n///\n/// @example scss - Basic text usage\n/// \t$base: (cap-height: .7);\n///   h1 {\n///     $font-size: 2rem;\n///     font-size: $font-size;\n///     line-height: line-height($font-size);\n///     margin-top: top($font-size);\n///     margin-bottom: bottom($font-size);\n///   }\n\n///\t## Row function\n/// Use `row()` to set a add a specific height to a element\n///\n/// @see base-row\n///\n/// @example scss - Specific height\n/// \t$base: (cap-height: .7);\n///   .foo {\n///     height: row(3);\n///   }\n/// @example scss - Text with added white space\n/// \t$base: (cap-height: .7);\n///   h1 {\n///     $font-size: 2rem;\n///     font-size: $font-size;\n///     line-height: line-height($font-size);\n///     margin-top: top($font-size) + row(3);\n///     margin-bottom: bottom($font-size) + row(2);\n///   }\n\n//* Base Line-height\n/// Returns the line-height that is needed to maintain the text on the baseline.\n///\n/// The un-prefixed alias `line-height()` is available by default.\n///\n/// @param {list|number} $short [null] -\n///   Shorthand expression to define the current text properties,\n///   optionally containing:\n///   - a unit number, current font-size\n///   - a unitless number, extra rows to add per text line\n/// @param {Map} $config [$base] -\n///   Optional map of Base configuration settings.\n///   See `$base` documentation for details.\n///\n/// @return {length}\tCalculated line-height in a unitless number\n///\n/// @example scss - line-height of default font-size\n///   $base: (cap-height: .5);\n///   .foo {\n///     line-height: line-height();\n///   }\n/// @example scss - normal usage\n///   $base: (cap-height: .5);\n///   .foo {\n///     $font-size: 2rem;\n///     line-height: line-height($font-size);\n///   }\n@function base-line-height($short: null, $config: $base) {\n\t$config: _base-compile($short, $config);\n\n\t@return _base-get-line-height($config);\n}\n\n//* Base Top\n/// Used to return the top offset needed for given font-size\n/// to maintain the baseline grid\n///\n/// The un-prefixed alias `top()` is available by default.\n///\n/// @param {list|number} $short [null] -\n///   Shorthand expression to define the current text properties,\n///   optionally containing:\n///   - a unit number, current font-size\n///   - a unitless number, extra rows to add per text line\n///   - `static`, `relative` or `absolute` for a specific math method\n/// @param {Map} $config [$base] -\n///   Optional map of Base configuration settings.\n///   See `$base` documentation for details.\n///\n/// @return {length}\tCalculated top shoulder\n///\n/// @example scss - top shoulder of default font-size\n///   $base: (cap-height: .5);\n///   .foo {\n///     padding-top: top();\n///   }\n/// @example scss - normal usage\n///   $base: (cap-height: .5);\n///   .foo {\n///     $font-size: 2rem;\n///     padding-top: top($font-size);\n///   }\n@function base-top($short: null, $config: $base) {\n\t$config: _base-compile($short, $config);\n\n\t$font-size:   map-get($config, \"font-size\");\n\t$cap-height:  map-get($config, \"cap-height\");\n\t$math: \t\t\t\tmap-get($config, \"math\");\n\n\t$line-height: _base-get-line-height($config);\n\t$calc-row-height: base-row($config);\n\n\t@if $math == \"static\" {\n\t\t@return _base-math-shoulder-top(1em, $line-height, $cap-height);\n\t} @else {\n\t\t$shoulder: _base-math-shoulder-top($font-size, $line-height, $cap-height);\n\t\t@if $math == \"relative\" {\n\t\t\t@return ($shoulder % $calc-row-height) / $font-size * 1em;\n\t\t} @else if $math == \"absolute\" {\n\t\t\t@return $shoulder % $calc-row-height;\n\t\t}\n\t}\n}\n\n//* Base Bottom\n/// Used to return the bottom offset needed for given font-size\n/// to maintain the baseline grid\n///\n/// The un-prefixed alias `bottom()` is available by default.\n///\n/// @param {list|number} $short [null] -\n///   Shorthand expression to define the current text properties,\n///   optionally containing:\n///   - a unit number, current font-size\n///   - a unitless number, extra rows to add per text line\n///   - `static`, `relative` or `absolute` for a specific math method\n/// @param {Map} $config [$base] -\n///   Optional map of Base configuration settings.\n///   See `$base` documentation for details.\n///\n/// @return {length}\tCalculated line-height\n///\n/// @example scss - bottom shoulder of default font-size\n///   $base: (cap-height: .5);\n///   .foo {\n///     padding-bottom: bottom();\n///   }\n/// @example scss - normal usage\n///   $base: (cap-height: .5);\n///   .foo {\n///     $font-size: 2rem;\n///     padding-bottom: bottom($font-size relative);\n///   }\n@function base-bottom($short: null, $config: $base) {\n\t$config: _base-compile($short, $config);\n\n\t$cap-height: \t\t\tmap-get($config, \"cap-height\");\n\t$font-size: \t\t\tmap-get($config, \"font-size\");\n\t$root-font-size: \tmap-get($config, \"root-font-size\");\n\t$row-height: \t\t\tmap-get($config, \"row-height\");\n\t$math: \t\t\t\t\t\tmap-get($config, \"math\");\n\n\t$line-height: \t\t_base-get-line-height($config);\n\t$calc-row-height: base-row($config);\n\n\t@if $math == \"static\" {\n\t\t@return calc(#{$calc-row-height} - #{_base-math-shoulder-top(1em, $line-height, $cap-height)});\n\t} @else {\n\t\t$shoulder: _base-math-shoulder-bottom(\n\t\t\t$font-size, $line-height, $root-font-size, $row-height, $cap-height\n\t\t);\n\t\t@if $math == \"relative\" {\n\t\t\t@return ($shoulder % $calc-row-height) / $font-size * 1em;\n\t\t} @else if $math == \"absolute\" {\n\t\t\t@return $shoulder % $calc-row-height;\n\t\t}\n\t}\n}\n\n//* Base Font-size\n/// It returns the extracted font-size from the shorthand,\n/// if non given it will fallback on the base font-size.\n///\n/// The un-prefixed alias `font-size()` is available by default.\n///\n/// @param {list|number} $short [null] -\n///   Shorthand expression to define the current text properties,\n///   optionally containing:\n///   - a unit number, current font-size\n/// @param {Map} $config [$base] -\n///   Optional map of Base configuration settings.\n///   See `$base` documentation for details.\n///\n/// @return {length}\tRaw font-size\n///\n///\t@example css - proposed usage\n///\t  .foo {\n///\t    $font-size: 2rem;\n///\t    font-size: $font-size;\n///\t  }\n/// @example scss - default font-size\n///   $base: (cap-height: .5);\n///   .foo {\n///     font-size: font-size();\n///   }\n/// @example scss - specific font-size\n///   $base: (cap-height: .5);\n///\t  .foo {\n///\t    font-size: font-size(2rem);\n///\t  }\n@function base-font-size($short: null, $config: $base) {\n\t$config: _base-compile($short, $config);\n\n\t@return map-get($config, \"font-size\");\n}\n\n//* Base row\n/// Returns the height of a certain amount of rows\n/// @param  {Number} $rows   [1]           Number of rows to span\n/// @param {Map} $config [$base] -\n///   Optional map of Base configuration settings.\n///   See `$base` documentation for details.\n///\n/// @return {Number}         Height to span given rows\n///\n/// @example scss - single row\n///   $base: (cap-height: .5);\n///   .foo {\n///     height: row();\n///   }\n/// @example scss - a specific amount of rows\n///   $base: (cap-height: .5);\n///   .foo {\n///     height: row(3);\n///   }\n@function base-row($rows: 1, $config: $base) {\n\t@if type-of($rows) == map {\n\t\t// a $config map is given as first param, reset default rows\n\t\t$config: _base-compile((), $rows);\n\t\t$rows: 1;\n\t} @else {\n\t\t$config: _base-compile((), $config);\n\t}\n\n\t$root-font-size: \tmap-get($config, \"root-font-size\");\n\t$row-height: \t\t\tmap-get($config, \"row-height\");\n\n\t@return _base-math-row-height($rows, $row-height, $root-font-size);\n}","/// Grid Math Engine\n/// ================\n/// The `su` functions give you direct access to the math layer,\n/// without any syntax-sugar like shorthand parsing, and normalization.\n/// If you prefer named arguments, and stripped-down syntax,\n/// you can use these functions directly in your code –\n/// replacing `span`, `gutter`, and `slice`.\n///\n/// These functions are also useful\n/// for building mixins or other extensions to Susy.\n/// Apply the Susy syntax to new mixins and functions,\n/// using our \"Plugin Helpers\",\n/// or write your own syntax and pass the normalized results along\n/// to `su` for compilation.\n///\n/// @group su-math\n///\n/// @see su-span\n/// @see su-gutter\n/// @see su-slice\n/// @ignore _su-sum\n/// @ignore _su-calc-span\n/// @ignore _su-calc-sum\n/// @ignore _su-needs-calc-output\n\n\n\n// Su Span\n// -------\n/// Calculates and returns a CSS-ready span width,\n/// based on normalized span and context data –\n/// a low-level version of `susy-span`,\n/// with all of the logic and none of the syntax sugar.\n///\n/// - Grids defined with unitless numbers will return `%` values.\n/// - Grids defined with comparable units\n///   will return a value in the units provided.\n/// - Grids defined with a mix of units,\n///   or a combination of untiless numbers and unit-lengths,\n///   will return a `calc()` string.\n///\n/// @group su-math\n/// @see susy-span\n///\n/// @param {number | list} $span -\n///   Number or list of grid columns to span\n/// @param {list} $columns -\n///   List of columns available\n/// @param {number} $gutters -\n///   Width of a gutter in column-comparable units\n/// @param {0 | 1 | -1} $spread -\n///   Number of gutters spanned,\n///   relative to `span` count\n/// @param {0 | 1 | -1} $container-spread [$spread] -\n///   Number of gutters spanned,\n///   relative to `columns` count\n/// @param {integer} $location [1] -\n///   Optional position of sub-span among full set of columns\n///\n/// @return {length} -\n///   Relative or static length of a span on the grid\n@function su-span(\n  $span,\n  $columns,\n  $gutters,\n  $spread,\n  $container-spread: $spread,\n  $location: 1\n) {\n  $span: su-valid-span($span);\n  $columns: su-valid-columns($columns);\n  $gutters: su-valid-gutters($gutters);\n  $spread: su-valid-spread($spread);\n\n  @if (type-of($span) == 'number') {\n    @if (not unitless($span)) {\n      @return $span;\n    }\n\n    $location: su-valid-location($span, $location, $columns);\n    $span: su-slice($span, $columns, $location, $validate: false);\n  }\n\n  @if _su-needs-calc-output($span, $columns, $gutters, $spread, not 'validate') {\n    @return _su-calc-span($span, $columns, $gutters, $spread, $container-spread, not 'validate');\n  }\n\n  $span-width: _su-sum($span, $gutters, $spread, $validate: false);\n\n  @if unitless($span-width) {\n    $container-spread: su-valid-spread($container-spread);\n    $container: _su-sum($columns, $gutters, $container-spread, $validate: false);\n    @return percentage($span-width / $container);\n  }\n\n  @return $span-width;\n}\n\n\n\n// Su Gutter\n// ---------\n/// Calculates and returns a CSS-ready gutter width,\n/// based on normalized grid data –\n/// a low-level version of `susy-gutter`,\n/// with all of the logic and none of the syntax sugar.\n///\n/// - Grids defined with unitless numbers will return `%` values.\n/// - Grids defined with comparable units\n///   will return a value in the units provided.\n/// - Grids defined with a mix of units,\n///   or a combination of untiless numbers and unit-lengths,\n///   will return a `calc()` string.\n///\n/// @group su-math\n/// @see susy-gutter\n///\n/// @param {list} $columns -\n///   List of columns in the grid\n/// @param {number} $gutters -\n///   Width of a gutter in column-comparable units\n/// @param {0 | 1 | -1} $container-spread -\n///   Number of gutters spanned,\n///   relative to `columns` count\n///\n/// @return {length} -\n///   Relative or static length of one gutter in a grid\n@function su-gutter(\n  $columns,\n  $gutters,\n  $container-spread\n) {\n  @if (type-of($gutters) == 'number') {\n    @if ($gutters == 0) or (not unitless($gutters)) {\n      @return $gutters;\n    }\n  }\n\n  @if _su-needs-calc-output($gutters, $columns, $gutters, -1, not 'validate') {\n    @return _su-calc-span($gutters, $columns, $gutters, -1, $container-spread, not 'validate');\n  }\n\n  $container: _su-sum($columns, $gutters, $container-spread);\n  @return percentage($gutters / $container);\n}\n\n\n\n// Su Slice\n// --------\n/// Returns a list of columns\n/// based on a given span/location slice of the grid –\n/// a low-level version of `susy-slice`,\n/// with all of the logic and none of the syntax sugar.\n///\n/// @group su-math\n/// @see susy-slice\n///\n/// @param {number} $span -\n///   Number of grid columns to span\n/// @param {list} $columns -\n///   List of columns in the grid\n/// @param {number} $location [1] -\n///   Starting index of a span in the list of columns\n/// @param {bool} $validate [true] -\n///   Check that arguments are valid before proceeding\n///\n/// @return {list} -\n///   Subset list of grid columns, based on span and location\n@function su-slice(\n  $span,\n  $columns,\n  $location: 1,\n  $validate: true\n) {\n  @if $validate {\n    $columns: su-valid-columns($columns);\n    $location: su-valid-location($span, $location, $columns);\n  }\n\n  $floor: floor($span);\n  $sub-columns: ();\n\n  @for $i from $location to ($location + $floor) {\n    $sub-columns: append($sub-columns, nth($columns, $i));\n  }\n\n  @if $floor != $span {\n    $remainder: $span - $floor;\n    $column: $location + $floor;\n    $sub-columns: append($sub-columns, nth($columns, $column) * $remainder);\n  }\n\n  @return $sub-columns;\n}\n\n\n\n// Su Sum\n// ------\n/// Get the total sum of column-units in a layout.\n///\n/// @group su-math\n/// @access private\n///\n/// @param {list} $columns -\n///   List of columns in the grid\n/// @param {number} $gutters -\n///   Width of a gutter in column-comparable units\n/// @param {0 | 1 | -1} $spread -\n///   Number of gutters spanned,\n///   relative to `columns` count\n/// @param {bool} $validate [true] -\n///   Check that arguments are valid before proceeding\n///\n/// @return {number} -\n///   Total sum of column-units in a grid\n@function _su-sum(\n  $columns,\n  $gutters,\n  $spread,\n  $validate: true\n) {\n  @if $validate {\n    $columns: su-valid-span($columns);\n    $gutters: su-valid-gutters($gutters);\n    $spread: su-valid-spread($spread);\n  }\n\n  // Calculate column-sum\n  $column-sum: 0;\n  @each $column in $columns {\n    $column-sum: $column-sum + $column;\n  }\n\n  $gutter-sum: (ceil(length($columns)) + $spread) * $gutters;\n  $total: if(($gutter-sum > 0), $column-sum + $gutter-sum, $column-sum);\n\n  @return $total;\n}\n\n\n\n// Su Calc\n// -------\n/// Return a usable span width as a `calc()` function,\n/// in order to create mixed-unit grids.\n///\n/// @group su-math\n/// @access private\n///\n/// @param {number | list} $span -\n///   Pre-sliced list of grid columns to span\n/// @param {list} $columns -\n///   List of columns available\n/// @param {number} $gutters -\n///   Width of a gutter in column-comparable units\n/// @param {0 | 1 | -1} $spread -\n///   Number of gutters spanned,\n///   relative to `span` count\n/// @param {0 | 1 | -1} $container-spread [$spread] -\n///   Number of gutters spanned,\n///   relative to `columns` count\n/// @param {bool} $validate [true] -\n///   Check that arguments are valid before proceeding\n///\n/// @return {length} -\n///   Relative or static length of a span on the grid\n@function _su-calc-span(\n  $span,\n  $columns,\n  $gutters,\n  $spread,\n  $container-spread: $spread,\n  $validate: true\n) {\n  @if $validate {\n    $span: su-valid-span($span);\n    $columns: su-valid-columns($columns);\n    $gutters: su-valid-gutters($gutters);\n    $spread: su-valid-spread($spread);\n    $container-spread: su-valid-spread($container-spread);\n  }\n\n  // Span and context\n  $span: _su-calc-sum($span, $gutters, $spread, not 'validate');\n  $context: _su-calc-sum($columns, $gutters, $container-spread, not 'validate');\n\n  // Fixed and fluid\n  $fixed-span: map-get($span, 'fixed');\n  $fluid-span: map-get($span, 'fluid');\n  $fixed-context: map-get($context, 'fixed');\n  $fluid-context: map-get($context, 'fluid');\n\n  $calc: '#{$fixed-span}';\n  $fluid-calc: '(100% - #{$fixed-context})';\n\n  // Fluid-values\n  @if (not $fluid-span) {\n    $fluid-calc: null;\n  } @else if ($fluid-span != $fluid-context) {\n    $fluid-span: '* #{$fluid-span}';\n    $fluid-context: if($fluid-context, '/ #{$fluid-context}', '');\n    $fluid-calc: '(#{$fluid-calc $fluid-context $fluid-span})';\n  }\n\n  @if $fluid-calc {\n    $calc: if(($calc != ''), '#{$calc} + ', '');\n    $calc: '#{$calc + $fluid-calc}';\n  }\n\n  @return calc(#{unquote($calc)});\n}\n\n\n\n// Su Calc-Sum\n// -----------\n/// Get the total sum of fixed and fluid column-units\n/// for creating a mixed-unit layout with `calc()` values.\n///\n/// @group su-math\n/// @access private\n///\n/// @param {list} $columns -\n///   List of columns available\n/// @param {number} $gutters -\n///   Width of a gutter in column-comparable units\n/// @param {0 | 1 | -1} $spread -\n///   Number of gutters spanned,\n///   relative to `span` count\n/// @param {bool} $validate [true] -\n///   Check that arguments are valid before proceeding\n///\n/// @return {map} -\n///   Map with `fixed` and `fluid` keys\n///   containing the proper math as strings\n@function _su-calc-sum(\n  $columns,\n  $gutters,\n  $spread,\n  $validate: true\n) {\n  @if $validate {\n    $columns: su-valid-span($columns);\n    $gutters: su-valid-gutters($gutters);\n    $spread: su-valid-spread($spread);\n  }\n\n  $fluid: 0;\n  $fixed: ();\n  $calc: null;\n\n  // Gutters\n  $gutters:  $gutters * (length($columns) + $spread);\n\n  // Columns\n  @each $col in append($columns, $gutters) {\n    @if unitless($col) {\n      $fluid: $fluid + $col;\n    } @else {\n      $fixed: _su-map-add-units($fixed, $col);\n    }\n  }\n\n  // Compile Fixed Units\n  @each $unit, $total in $fixed {\n    @if ($total != (0 * $total)) {\n      $calc: if($calc, '#{$calc} + #{$total}', '#{$total}');\n    }\n  }\n\n  // Calc null or string\n  @if $calc {\n    $calc: if(str-index($calc, '+'), '(#{$calc})', '#{$calc}');\n  }\n\n  // Fluid 0 => null\n  $fluid: if(($fluid == 0), null, $fluid);\n\n\n  // Return map\n  $return: (\n    'fixed': $calc,\n    'fluid': $fluid,\n  );\n\n  @return $return;\n}\n\n\n\n// Needs Calc\n// ----------\n/// Check if `calc()` will be needed in defining a span,\n/// if the necessary units in a grid are not comparable.\n///\n/// @group su-math\n/// @access private\n///\n/// @param {list} $span -\n///   Slice of columns to span\n/// @param {list} $columns -\n///   List of available columns in the grid\n/// @param {number} $gutters -\n///   Width of a gutter\n/// @param {0 | 1 | -1} $spread -\n///   Number of gutters spanned,\n///   relative to `span` count\n/// @param {bool} $validate [true] -\n///   Check that arguments are valid before proceeding\n///\n/// @return {bool} -\n///   `True` when units do not match, and `calc()` will be required\n@function _su-needs-calc-output(\n  $span,\n  $columns,\n  $gutters,\n  $spread,\n  $validate: true\n) {\n  @if $validate {\n    $span: su-valid-span($span);\n    $columns: su-valid-columns($columns);\n    $gutters: su-valid-gutters($gutters);\n  }\n\n  $has-gutter: if((length($span) > 1) or ($spread >= 0), true, false);\n  $check: if($has-gutter, append($span, $gutters), $span);\n  $safe-span: _su-is-comparable($check...);\n\n  @if ($safe-span == 'static') {\n    @return false;\n  } @else if (not $safe-span) {\n    @return true;\n  }\n\n  $safe-fluid: _su-is-comparable($gutters, $columns...);\n\n  @return not $safe-fluid;\n}\n","// $context: of 10;\n\n.why {\n\tbackground: left top / cover;\n\tbackground-color: $color-blue;\n\tbackground-color: #061d33;\n\tbackground-image: url(inline-svg(\"./../_includes/why.svg\"));\n\tcolor: $color-white;\n\twidth: auto;\n\tmargin: 0;\n\tpadding: row(4) span(1 wider);\n\toverflow: auto;\n\t&_text {\n\t\tfloat: left;\n\t\twidth: span(6 of 10 narrow);\n\t}\n\th2 {\n\t\tfont-weight: 400;\n\t}\n\tp {\n\t\tfont-weight: 100;\n\t\t$font-size: rem(22px);\n\t\tfont-size: $font-size;\n\t\tline-height: line-height($font-size);\n\t\tpadding-top: top($font-size);\n\t\tpadding-bottom: bottom($font-size);\n\t}\n\tsvg {\n\t\twidth: span(3 of 10 narrow);\n\t\tmargin-left: span(1 wider of 10 narrow);\n\t\theight: auto;\n\t}\n\t@include bp($small) {\n\t\tpadding: row() gutter($small) row() * 3;\n\t\t&_text {\n\t\t\twidth: auto;\n\t\t}\n\t\tp {\n\t\t\tmargin-left: 0;\n\t\t\twidth: auto;\n\t\t}\n\t\tsvg {\n\t\t\tdisplay: none;\n\t\t}\n\t};\n}",".how {\n\tmargin: 0;\n\twidth: 100%;\n\toverflow: auto;\n\tsvg {\n\t\t@include base-aspect-ratio(1, 25%, (from: 3, until: 6));\n\t}\n\th2 {\n\t\tmargin-left: span(1 wider);\n\t\tcolor: $color-green;\n\t\t@include bp($small) {\n\t\t\tmargin-left: 0;\n\t\t}\n\t}\n\tul {\n\t\tdisplay: flex;\n\t\t@include bp($small) {\n\t\t\tdisplay: block;\n\t\t};\n\t}\n\tli {\n\t\tlist-style: none;\n\t}\n}\n\n.feature {\n\t//sass-lint:disable-block no-duplicate-properties\n\t$font-size: rem(26px);\n\tfont-size: $font-size;\n\tfont-size: responsive-text(\n\t\t$min: rem(16px), $max: $font-size,\n\t\t$min-width: em-to-rem(map-get($small, \"max-width\")),\n\t\t$max-width: em-to-rem(map-get($susy, \"design-width\"))\n\t);\n\tcolor: $color-white;\n\tfont-weight: 100;\n\tfloat: left;\n\twidth: span(4 narrow);\n\tpadding: \trow(2) gutter() / 2;\n\n\tb, strong {\n\t\tfont-weight: 400;\n\t}\n\t&:first-child {\n\t\tpadding-left: gutter();\n\t}\n\t&:last-child {\n\t\tpadding-right: gutter();\n\t}\n\n\tsvg, span {\n\t\tvertical-align: middle;\n\t}\n\n\tsvg {\n\t\t@include base-aspect-ratio(\n\t\t\t$aspect: 200 / 128, $perc: span(2),\n\t\t\t$config: (aspect: (from: em-to-rem(map-get($small, \"max-width\")), until: 8))\n\t\t);\n\t\twidth: span(2 of 4 narrow);\n\t\tmargin-right: gutter(of 4 narrow);\n\t}\n\tspan {\n\t\t$line-height: line-height($font-size);\n\t\tdisplay: inline-block;\n\t\twidth: span(2 of 4 narrow);\n\t\tline-height: $line-height;\n\t\tpadding: top(static, (line-height: $line-height))\n\t\t\t\t\t\t 0\n\t\t\t\t\t\t bottom(static, (line-height: $line-height));\n\t}\n\n\t&_speed {\n\t\tbackground: $color-green-dark;\n\t}\n\t&_a11y {\n\t\tbackground: $color-green;\n\t}\n\t&_indepedent {\n\t\tbackground: $color-green-light;\n\t}\n\n\t@include bp($small) {\n\t\t// sass-lint:disable-block no-duplicate-properties\n\t\t$font-size: rem(15px);\n\t\tfont-size: $font-size;\n\t\tfont-size: responsive-text(\n\t\t\t$min: $font-size, $max: rem(30px),\n\t\t\t$min-width: em-to-rem(map-get($small, \"design-width\")),\n\t\t\t$max-width: em-to-rem(map-get($small, \"max-width\"))\n\t\t);\n\n\t\twidth: auto; // reset desktop\n\t\tfloat: none; // reset desktop\n\t\tpadding: row() gutter($small);\n\t\tbox-sizing: border-box;\n\n\t\t// progressive enhancement\n\t\tdisplay: flex;\n\t\talign-items: center;\n\n\t\t// override desktop\n\t\t&:first-child {\n\t\t\tpadding-left: gutter($small);\n\t\t}\n\n\t\tsvg, span {\n\t\t\tdisplay: inline-block;\n\t\t}\n\t\tsvg {\n\t\t\t@include base-aspect-ratio($aspect: 1, $perc: span(1, $small),\n\t\t\t\t$config: ( aspect: ( until: em-to-rem(map-get($small, \"max-width\")) ) )\n\t\t\t);\n\t\t\tbox-sizing: border-box;\n\t\t\twidth: span(1 of narrow, $small);\n\t\t\theight: 100%;\n\t\t\tmargin-left: 0;\n\t\t\tmargin-right: gutter(of narrow, $small);\n\t\t}\n\t\tspan {\n\t\t\twidth: span(3 of narrow, $small);\n\t\t\tline-height: line-height($font-size);\n\t\t\tpadding: top(static, (line-height: line-height($font-size))) 0;\n\t\t}\n\n\t\t// change icon order on the even elements\n\t\t&:nth-child(even) {\n\t\t\tsvg {\n\t\t\t\torder: 2;\n\t\t\t\tmargin-left: gutter(of narrow, $small);\n\t\t\t\tmargin-right: 0;\n\t\t\t}\n\t\t}\n\t}\n}","////\n///  @group plugin_aspect\n////\n\n@import \"convert\";\n\n//* Base Debug Defaults\n/// This plugin adds the `aspect-allow` property and default value to `$_base-settings-defaults` —\n/// you can override that value in `$base` or any other grid settings map.\n/// @type {map}\n$_base-settings-defaults: map-merge(\n\t(\n\t\taspect: (\n\t\t\tallow: \"smaller\",\n\t\t\tfrom: 1,\n\t\t\tuntil: 120rem\n\t\t)\n\t), $_base-settings-defaults\n);\n\n\n//* Base Aspect Ratio\n/// Determines the height needed to keep a element closest\n/// to given aspect-ratio per row\n///\n/// #### BE CAUTION TO USE THIS MIXIN\n/// it can add many css lines.\n/// It's advised to use this function in small range or small elements\n///\n/// @param {Number} $aspect   \t\t\t\t Desired aspect-ratio (width/height)\n/// @param {Number} $perc \t\t[100%]\t Width in percentage used by the element\n/// @param {String} $property [height]  Property to set the value on\n/// @param {Map} $config [$base] -\n///   Optional map of Base configuration settings.\n///   See `$base` documentation for details.\n///\n/// @example scss - Basic usage\n///   $base: (cap-height: .5);\n///   svg {\n///     @include base-aspect-ratio(1);\n///   }\n/// @example scss - Within a specific range\n///   $base: (cap-height: .5);\n///   svg {\n///     @include base-aspect-ratio(1, 25%, $config: (aspect: (from: 3, until: 6, allow: wider)));\n///   }\n/// @example scss - Allow a wider aspect-ratio\n///   $base: (cap-height: .5);\n///   svg {\n///     @include base-aspect-ratio(1, 25%, $config: (aspect: (until: 3, allow: smaller)));\n///   }\n@mixin base-aspect-ratio($aspect, $perc: 100%, $property: \"height\", $config: $base) {\n\t$config: _base-compile((), $config);\n\n\t$root-font-size: \tmap-get($config, \"root-font-size\");\n\t$aspect-config: \tmap-get($config, \"aspect\");\n\n\t$aspect-allow: \t\tmap-get($aspect-config, \"allow\");\n\t$from: \t\t\t\t\t\tmap-get($aspect-config, \"from\");\n\t$until: \t\t\t\t\tmap-get($aspect-config, \"until\");\n\t$and: \t\t\t\t\t\tmap-get($aspect-config, \"and\");\n\n\t@if $aspect-allow != \"smaller\" and $aspect-allow != \"wider\" {\n\t\t@error _base-error(\n\t\t\t\"`aspect-allow` is defined properly config map, only allow wider and smaller\",\n\t\t\t\"base-aspect-ratio\"\n\t\t);\n\t}\n\n\t@if ((not unitless($from) and not _base-valid-unit($from, $root-font-size))\n\t\tor\n\t\t(not unitless($until) and not _base-valid-unit($until, $root-font-size))\n\t) { //sass-lint:disable-line brace-style\n\t\t@error _base-error(\n\t\t\t\"aspect.from or aspect.until has an incompatible unit\",\n\t\t\t\"base-aspect-ratio\"\n\t\t);\n\t}\n\n\t$row-height: base-row();\n\t$perc-in-decimal: ($perc / 100%);\n\n\t// **** CONVERT $from AND $until VALUES TO ROW COUNT IF NECCESSARY ****\n\t$from-rows: if(unitless($from), $from, ceil(base-convert-size-to-rows($from * $perc-in-decimal)));\n\t$until-rows: if(unitless($until), $until, ceil(base-convert-size-to-rows($until * $perc-in-decimal / $aspect)));\n\t// **** END OF CONVERSION ****\n\n\t// use last row to set default value\n\t#{$property}: $until-rows * $row-height;\n\n\t// start at second last row when smaller, otherwise loop upwards\n\t$current-rows: if($aspect-allow == \"smaller\", $until-rows - 1, $from-rows);\n\n\t@while if($aspect-allow == \"smaller\", $current-rows >= $from-rows, $current-rows <= $until-rows) {\n\t\t$media-query: \"\";\n\t\t$width-boundry: ($current-rows * $row-height * $aspect) / ($perc / 100%);\n\n\t\t@if $aspect-allow == \"smaller\" {\n\t\t\t$media-query: \"(max-width: #{$width-boundry})\";\n\t\t} @else if $aspect-allow == \"wider\" {\n\t\t\t$media-query: \"(min-width: #{$width-boundry})\";\n\t\t}\n\n\t\t@if $and != null {\n\t\t\t$media-query: \"#{$media-query} and #{$and}\";\n\t\t}\n\n\t\t@at-root (without: media) {\n\t\t\t@media #{$media-query} {\n\t\t\t\t#{$property}: $current-rows * $row-height;\n\t\t\t}\n\t\t}\n\n\t\t// update index upwards or downwards depending on setting\n\t\t$current-rows: if($aspect-allow == \"smaller\", $current-rows - 1, $current-rows + 1);\n\t}\n}","$icon-path: \"../_includes/icons/\";\n$svgo: (removeDimensions: true);\n$size: 14;\n\n%bracket {\n\t&::before {\n\t\t$current-full-width: 1480 / 100% * span(3 narrow);\n\t\twidth: 100% / $current-full-width * 29;\n\t}\n\t&::after {\n\t\t$current-full-width: 1480 / 100% * span(3 narrow);\n\t\twidth: 100% / $current-full-width * 30;\n\t}\n}\n%tag {\n\t&::before {\n\t\t$current-full-width: 1480 / 100% * span(3 narrow);\n\t\twidth: 100% / $current-full-width * 33;\n\t}\n\t&::after {\n\t\t$current-full-width: 1480 / 100% * span(3 narrow);\n\t\twidth: 100% / $current-full-width * 61;\n\t}\n}\n%as-svg {\n\tfont-weight: 500;\n\t// center its content like the default svg preserveAspectRatio\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n}\n@mixin as-svg($size, $current-viewbox, $used-viewbox, $font-size, $inner-svg-offset: 0 0, $text-offset: 0 0) {\n\t@extend %as-svg;\n\t$fit-in: if(unit($size) == \"vh\", \"height\", \"width\");\n\t$height: if($fit-in == \"height\", $size, $size / nth($used-viewbox, 3) * nth($used-viewbox, 4));\n\t$calc-point-size: $height / nth($used-viewbox, 4);\n\n\tsvg {\n\t\theight: $height;\n\t\t// height * aspect ratio of current / used svg\n\t\twidth: $height * nth($current-viewbox, 3) / nth($current-viewbox, 4);\n\t\t@if nth($inner-svg-offset, 2) != 0 { margin-top: $calc-point-size * nth($inner-svg-offset, 2); }\n\t\t@if nth($inner-svg-offset, 1) != 0 { margin-left: $calc-point-size * nth($inner-svg-offset, 1); }\n\t}\n\tspan {\n\t\tfont-size: $calc-point-size * $font-size; // point size * font-size\n\t\theight: $height - $calc-point-size * (nth($text-offset, 2) - $font-size); // point size * (y - font-size)\n\t\t// point size * (y - font-size)\n\t\t@if nth($text-offset, 2) != 0 { margin-top: $calc-point-size * (nth($text-offset, 2) - $font-size); }\n\t\t// point size * x\n\t\t@if nth($text-offset, 1) != 0 { margin-left: $calc-point-size * nth($text-offset, 1); }\n\t}\n}\n\n.with {\n\twidth: auto;\n\tmargin: row(3) 0 row(5);\n\n\th2 {\n\t\tmargin: row() span(1 wider);\n\t\t@include bp($small) {\n\t\t\tmargin: row() span(1 of narrow);\n\t\t}\n\t}\n\n\tsvg {\n\t\tfont-weight: 500;\n\t\tfont-size: 52px; //sass-lint:disable-line property-units\n\t\tvertical-align: middle;\n\t\twidth: 80%;\n\t\theight: 100%;\n\t}\n\tul {\n\t\toverflow: auto;\n\t}\n\t&__tool {\n\t\t// base\n\t\t@include base-aspect-ratio(\n\t\t\t$aspect: .93, $perc: span(3 narrow) - (100% / 1480 * 60 * 2),\n\t\t\t$config: (aspect: (until: $size, from: em-to-rem(map-get($small, \"max-width\"))))\n\t\t);\n\n\t\t// susy\n\t\tbox-sizing: border-box;\n\t\tmargin-right: gutter();\n\t\twidth: span(3 narrow);\n\t\tfloat: left;\n\n\t\tbackground: center / contain no-repeat content-box;\n\t\tposition: relative;\t\t// positioning psuedo elements\n\t\tlist-style: none;\t\t\t// reset\n\t\tfont-size: 0;\t\t\t\t\t// hide readable text\n\t\ttext-align: center; // center svg\n\t\t&:first-child {\n\t\t\tmargin-left: gutter();\n\t\t}\n\t\t&::before, &::after {\n\t\t\tcontent: \"\";\n\t\t\tbackground: center / contain no-repeat content-box;\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\theight: 100%;\n\t\t}\n\t\t&::after {\n\t\t\tleft: auto;\n\t\t\tright: 0;\n\t\t}\n\t\tabbr {\n\t\t\tdisplay: block;\n\t\t\ttext-decoration: none;\n\t\t}\n\t\t&_gulp {\n\t\t\t@extend %bracket;\n\t\t\tbackground-image: url(inline-svg($icon-path + \"gulp.svg\"));\n\t\t\tpadding-right: 100% / 1480 * 60;\n\t\t\tpadding-left: 100% / 1480 * 60;\n\t\t\t&::before {\n\t\t\t\tbackground-image: url(inline-svg($icon-path + \"open-bracket.svg\", \"svg { fill: #{$color-red} }\"));\n\t\t\t}\n\t\t\t&::after {\n\t\t\t\tbackground-image: url(inline-svg($icon-path + \"closing-bracket.svg\", \"svg { fill: #{$color-red} }\"));\n\t\t\t}\n\t\t}\n\t\t&_sass {\n\t\t\t@extend %bracket;\n\t\t\tbackground-image: url(inline-svg($icon-path + \"sass.svg\"));\n\t\t\tpadding-left: 100% / 1480 * 70;\n\t\t\tpadding-right: 100% / 1480 * 70;\n\t\t\tabbr { height: 100%; }\n\t\t\t&::before {\n\t\t\t\tbackground-image: url(inline-svg($icon-path + \"open-bracket.svg\", \"svg { fill: #{$color-pink} }\"));\n\t\t\t}\n\t\t\t&::after {\n\t\t\t\tbackground-image: url(inline-svg($icon-path + \"closing-bracket.svg\", \"path { fill: #{$color-pink} }\"));\n\t\t\t}\n\t\t}\n\t\t&_html {\n\t\t\t@extend %tag;\n\t\t\t$padding-left: 100% / 1480 * (33 + 14);\n\t\t\t$padding-right: 100% / 1480 * (61 + 14);\n\t\t\t$width-in-vw: ((span(3 narrow) - $padding-left - $padding-right) / 1% * 1vw) * .8;\n\t\t\t@include as-svg(\n\t\t\t\t$size: $width-in-vw, $used-viewbox: 0 0 196 97, $current-viewbox: 0 0 35 40,\n\t\t\t\t$font-size: 52, $text-offset: -2.17 59.9, $inner-svg-offset: 4 0\n\t\t\t);\n\t\t\tcolor: $color-orange;\n\t\t\tpadding-left: $padding-left;\n\t\t\tpadding-right: $padding-right;\n\n\t\t\tspan { float: left; } // fallback switcheroo\n\t\t\tsvg {\n\t\t\t\tfloat: right; // fallback switcheroo\n\t\t\t\torder: 1;\n\t\t\t}\n\t\t\t&::before {\n\t\t\t\tbackground-image: url(inline-svg($icon-path + \"open-tag.svg\", \"svg { fill: #{$color-orange} }\"));\n\t\t\t}\n\t\t\t&::after {\n\t\t\t\tbackground-image: url(inline-svg($icon-path + \"closing-tag.svg\", \"path { fill: #{$color-orange} }\"));\n\t\t\t}\n\t\t}\n\t\t&_svg {\n\t\t\t@extend %tag;\n\t\t\t$padding-left: 100% / 1480 * (33 + 20);\n\t\t\t$padding-right: 100% / 1480 * (61 + 20);\n\t\t\t$width-in-vw: ((span(3 narrow) - $padding-left - $padding-right) / 1% * 1vw) * .8;\n\t\t\t@include as-svg(\n\t\t\t\t$size: $width-in-vw, $used-viewbox: 0 0 184 127, $current-viewbox: 0 0 131 127,\n\t\t\t\t$font-size: 52, $text-offset: 0 79\n\t\t\t);\n\t\t\tcolor: $color-blue;\n\t\t\tpadding-left: $padding-left;\n\t\t\tpadding-right: $padding-right;\n\t\t\tsvg, span { float: left; }\n\t\t\t&::before {\n\t\t\t\tbackground-image: url(inline-svg($icon-path + \"open-tag.svg\", \"svg { fill: #{$color-blue} }\"));\n\t\t\t}\n\t\t\t&::after {\n\t\t\t\tbackground-image: url(inline-svg($icon-path + \"closing-tag.svg\", \"path { fill: #{$color-blue} }\"));\n\t\t\t}\n\t\t}\n\t}\n\n\t@include bp($small) {\n\t\t// overrides some style to return to normal behavior for the svg & html icons\n\t\t%override-as-svg-styles {\n\t\t\tdisplay: block;\n\t\t\tsvg, span {\n\t\t\t\tfloat: none;\n\t\t\t}\n\t\t\tspan {\n\t\t\t\tfont-size: inherit;\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t\tsvg {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\twidth: 100%;\n\t\t\t\tvertical-align: baseline;\n\t\t\t}\n\t\t}\n\n\t\t$font-size: 1rem;\n\t\t$s-bottom-offset: bottom($font-size);\n\t\t&__tool {\n\t\t\tbackground: none;\n\t\t\tfont-weight: 500;\n\t\t\theight: auto; \t// reset base aspect ratio\n\t\t\tpadding: 0; \t\t// reset custom indetation of desktop\n\t\t\tcolor: inherit; // override html and svg color\n\n\t\t\t// base\n\t\t\tfont-size: $font-size;\n\t\t\tline-height: line-height($font-size);\n\t\t\tmargin-bottom: $s-bottom-offset;\n\n\t\t\t// susy\n\t\t\twidth: span(1, $small);\n\t\t\tmargin-right: gutter($small);\n\t\t\t&:first-child {\n\t\t\t\tmargin-left: gutter($small);\n\t\t\t}\n\n\t\t\t// \"+\", plus sign\n\t\t\t&::after {\n\t\t\t\tcontent: \"\";\n\t\t\t\tbackground: url(inline-svg($icon-path + \"plus.svg\"))\n\t\t\t\t\t\t\t\t\t\tcenter / contain no-repeat content-box;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tposition: absolute;\n\t\t\t\tleft: - gutter(of 1 narrow, $small);\n\t\t\t\twidth: gutter(of 1 narrow, $small);\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\tpadding: 0 .2rem;\n\t\t\t\theight: 1.6rem;\n\t\t\t\ttop: auto;\n\t\t\t\tbottom: $s-bottom-offset - .3rem;\n\t\t\t}\n\t\t\t&:first-child {\n\t\t\t\t&::after {\n\t\t\t\t\tcontent: none;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// end plus sign\n\n\t\t\t// logo of the tool\n\t\t\t&::before, & svg {\n\t\t\t\t@include base-aspect-ratio(55 / 64, span(1, $small),\n\t\t\t\t\t$config: (aspect: (until: em-to-rem(map-get($small, \"max-width\"))))\n\t\t\t\t);\n\t\t\t}\n\t\t\t&::before {\n\t\t\t\tcontent: none;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tposition: static;\n\t\t\t\twidth: 100%;\n\t\t\t}\n\t\t\t&_gulp {\n\t\t\t\t&::before {\n\t\t\t\t\tcontent: \"\";\n\t\t\t\t\tbackground-image: url(inline-svg($icon-path + \"gulp.svg\"));\n\t\t\t\t}\n\t\t\t}\n\t\t\t&_sass {\n\t\t\t\tabbr { height: auto; }\n\t\t\t\t&::before {\n\t\t\t\t\tcontent: \"\";\n\t\t\t\t\tbackground-image: url(inline-svg($icon-path + \"sass.svg\"));\n\t\t\t\t\tpadding-top: 100% / (span(1, $small) / 100% * 320) * 19;\n\t\t\t\t\tpadding-bottom: 100% / (span(1, $small) / 100% * 320) * 7.6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t&_html {\n\t\t\t\t@extend %override-as-svg-styles;\n\t\t\t\tsvg {\n\t\t\t\t\tpadding-top: 100% / (span(1, $small) / 100% * 320) * 20;\n\t\t\t\t\tpadding-bottom: 100% / (span(1, $small) / 100% * 320) * 4;\n\t\t\t\t}\n\t\t\t}\n\t\t\t&_svg {\n\t\t\t\t@extend %override-as-svg-styles;\n\t\t\t\tsvg {\n\t\t\t\t\tpadding-top: 100% / (span(1, $small) / 100% * 320) * 19;\n\t\t\t\t\tpadding-bottom: 100% / (span(1, $small) / 100% * 320) * 5.64;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}","$color-footer-grey: #E8E8E8;\n\n@mixin text-on-baseline($size, $design-width) {\n\t$font-size: 100vw / strip-unit($design-width) * strip-unit(em($size));\n\t$config: (\n\t\troot-font-size: 100vw / strip-unit($design-width),\n\t\tmin-line-height: map-get($base, \"cap-height\")\n\t);\n\tfont-size: $font-size;\n\tline-height: line-height($font-size, $config);\n\tpadding-top: top($font-size, $config);\n}\n\n.vcard {\n\tpadding: 0 gutter() row(3);\n\tbackground-color: $color-footer-grey;\n\tbackground-image: radial-gradient(50% 4% at center top, change-color($color-black, $alpha: .1), change-color($color-black, $alpha: .1)),\n\t\t\t\t\t\t\t\t\t\tlinear-gradient(change-color($color-black, $alpha: .1), change-color($color-black, $alpha: 0) 8%);\n\n\t@include bp($small) {\n\t\tpadding: 0 gutter($small) row();\n\t}\n\n\t&::after {\n\t\tcontent: \"\";\n\t\tclear: both;\n\t\tdisplay: block;\n\t}\n\n\tpicture, dl {\n\t\tdisplay: inline-block;\n\t\tvertical-align: middle;\n\t}\n\th2, picture {\n\t\tmargin-left: span(1 wide of narrow);\n\t}\n\n\t// ************* LINKS *************\n\t$font-size: rem(13px);\n\t&__link__list {\n\t\tfloat: right;\n\t\tfont-size: $font-size;\n\t\tline-height: line-height($font-size);\n\t\tpadding: row() + top($font-size) 0 bottom($font-size);\n\t\ta {\n\t\t\tborder-radius: 99em;\n\t\t\tcolor: inherit;\n\t\t\tdisplay: inline-block;\n\t\t\ttext-decoration: none;\n\t\t\ttransition: .3s border, .3s box-shadow;\n\t\t\t&:hover {\n\t\t\t\tbox-shadow: 0 rem(2px) rem(10px) change-color($color-black, $alpha: .2),\n\t\t\t\t\t\t\t\t\t\tinset 0 0 0 rem(1px) adjust-color($color-black, $lightness: 20%);\n\t\t\t}\n\t\t}\n\n\t\t@include bp($small) {\n\t\t\tfloat: none;\n\t\t\ttext-align: right;\n\t\t}\n\t}\n\n\t&__link_with-text {\n\t\tsvg {\n\t\t\tmargin-left: top($font-size) / 2;\n\t\t}\n\t}\n\t// ********* END OF LINKS **********\n\n\t// ************* TITLES *************\n\th2 {\n\t\t$font-size: rem(44px);\n\t\tfont-size: $font-size;\n\t\tline-height: line-height($font-size);\n\t\tpadding-top: top($font-size) + row();\n\t\tpadding-bottom: bottom($font-size) + row(3);\n\n\t\t@media (max-width: (map-get($susy, \"design-width\"))) { // 1480px\n\t\t\tpadding-bottom: bottom($font-size) + row(2);\n\t\t}\n\n\t\t@include bp($small) {\n\t\t\tmargin-left: 0;\n\t\t\t$font-size: rem(24px);\n\t\t\tfont-size: $font-size;\n\t\t\tline-height: line-height($font-size);\n\t\t\tpadding: top($font-size) 0 bottom($font-size);\n\t\t}\n\t}\n\t// ********* END OF TITLES **********\n\n\t// ********* PROFILE PICTURE *********\n\tpicture {\n\t\t@include base-aspect-ratio($aspect: 1, $perc: span(2 of narrow),\n\t\t\t$config: (aspect: (until: em-to-rem(map-get($susy, \"design-width\"))))\n\t\t);\n\n\t\tposition: relative;\n\t\twidth: span(2 of narrow);\n\t\tmargin-right: span(1 wider of narrow);\n\n\t\t// make box-shadow relative to it's width\n\t\tfont-size: 100vw / strip-unit(map-get($susy, \"design-width\"));\n\n\t\timg {\n\t\t\tborder-radius: rem(99999px);\n\t\t\tposition: absolute;\n\t\t\tleft: 50%;\n\t\t\ttop: 50%;\n\t\t\tmax-width: 100%;\n\t\t\tmax-height: 100%;\n\t\t\ttransform: translate(-50%, -50%);\n\t\t\tbox-shadow: 0 em(6px) em(14px) em(2px) change-color($color-black, $alpha: .3),\n\t\t\t\t\t\t\t\t\t0 0 em(20px) em(5px) change-color($color-black, $alpha: .1);\n\t\t}\n\t\t@include bp($small) {\n\t\t\t@include base-aspect-ratio(1, span(1 of narrow, $small),\n\t\t\t\t$config: (aspect: (until: em-to-rem(map-get($small, \"max-width\"))))\n\t\t\t);\n\t\t\twidth: span(1 of narrow, $small);\n\t\t\tmargin: 0 span(1 of narrow, $small) / 2 * 3 + gutter(of narrow, $small) / 2 * 3 row();\n\t\t};\n\t}\n\t// ****** END OF PROFILE PICTURE *****\n\n\t// ************ INFO LIST ************\n\tdl {\n\t\tcolor: $color-black;\n\t\twidth: span(8 of narrow);\n\n\t\tdisplay: inline-grid;\n\t\tgrid-template-columns: repeat(2, span(4 of 8 narrow));\n\t\tgrid-template-rows: repeat(2, row(2) row(3));\n\t\tgrid-gap: row() gutter(of 8 narrow);\n\n\t\t@media (max-width: (map-get($susy, \"design-width\"))) { // 1480px\n\t\t\tgrid-template-rows: repeat(2, row(1) row(2));\n\t\t}\n\n\t\t@include bp($small) {// 760px\n\t\t\twidth: span(4 of narrow, $small);\n\t\t\tgrid-template-columns: repeat(2, span(2 of 4 narrow, $small));\n\t\t\tgrid-template-rows: repeat(2, row() row(3));\n\t\t\tgrid-gap: row() gutter(of 4 narrow, $small);\n\t\t}\n\n\t\t@media (max-width: em(510px)) {\n\t\t\tgrid-template-rows: repeat(2, row() row(2));\n\t\t}\n\t}\n\tdt, dd {\n\t\tgrid-column: 1;\n\t\t&:nth-of-type(2n) { grid-column: 2; } // right elements\n\t}\n\tdt {\n\t\t// sass-lint:disable-block no-duplicate-properties\n\t\t$font-size: rem(20px);\n\t\tfont-size: $font-size;\n\t\tfont-size: responsive-text($font-size, rem(28px), map-get($small, \"max-width\"), map-get($susy, \"design-width\"));\n\t\tfont-weight: 500;\n\t\tgrid-column-end: span 1;\n\t\tgrid-row: 1 / span 2;\n\t\t&:nth-of-type(3), &:nth-of-type(4) {\n\t\t\tgrid-row-start: 3;\n\t\t}\n\t\t@include bp($small) {\n\t\t\tfont-size: responsive-text(rem(14px), rem(28px), map-get($small, \"design-width\"), map-get($small, \"max-width\"));\n\t\t}\n\t}\n\tdd {\n\t\t// sass-lint:disable-block no-duplicate-properties\n\t\t$font-size: rem(16px);\n\t\tfont-size: $font-size;\n\t\tfont-size: responsive-text($font-size, rem(24px), map-get($small, \"max-width\"), map-get($susy, \"design-width\"));\n\t\tgrid-row: 2;\n\t\t&:nth-of-type(3), &:nth-of-type(4) {\n\t\t\tgrid-row: 4;\n\t\t}\n\t\t@include bp($small) {\n\t\t\tfont-size: responsive-text(rem(12px), rem(24px), map-get($small, \"design-width\"), map-get($small, \"max-width\"));\n\t\t}\n\t}\n\t// ******** END OF INFO LIST ********\n}\n\n.icon {\n\tposition: relative;\n\tpadding-left: span(1 wide of 4 narrow);\n\n\t&::before {\n\t\tbackground: center / contain no-repeat;\n\t\tcontent: \"\";\n\t\tdisplay: inline-block;\n\t\tfloat: left;\n\t\theight: 100%;\n\t\tmargin-right: gutter(of 4 narrow);\n\t\tmin-height: 1rem;\n\t\twidth: span(1 of 4 narrow);\n\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 0;\n\t\tbottom: 0;\n\t\tpadding: .3em;\n\t\tbox-sizing: border-box;\n\t\tbackground-origin: content-box;\n\t}\n\n\t+ dd {\n\t\tpadding-left: span(1 wide of 4 narrow);\n\t}\n\n\t&.icon_leaf::before {\n\t\tbackground-image: url(inline-svg(\"../_includes/icons/leaf.svg\"));\n\t}\n\t&.icon_bed::before {\n\t\tbackground-image: url(inline-svg(\"../_includes/icons/bed.svg\"));\n\t}\n\t&.icon_hourglass::before {\n\t\tbackground-image: url(inline-svg(\"../_includes/icons/hourglass.svg\"));\n\t}\n\t&.icon_unicycle::before {\n\t\tbackground-image: url(inline-svg(\"../_includes/icons/unicycle.svg\"));\n\t}\n\n\t@include bp($small) {\n\t\t$icon-width: 17.5;\n\t\t$icon-margin: 20;\n\t\tpadding-left: 0;\n\t\t&::before {\n\t\t\tposition: static;\n\t\t\tpadding: 0;\n\t\t\tfloat: left;\n\t\t\t$font-size-in-pixels: 14;\n\t\t\twidth: 1em / $font-size-in-pixels * $icon-width;\n\t\t\tmargin-right: 1em / $font-size-in-pixels * $icon-margin;\n\t\t}\n\n\t\t// show the image on the left\n\t\t+ dd {\n\t\t\t$font-size-in-pixels: 12;\n\t\t\tpadding-left: (1em / $font-size-in-pixels * ($icon-width + $icon-margin));\n\t\t}\n\n\t\t// show the image on the right\n\t\t&:nth-of-type(2n) {\n\t\t\ttext-align: right;\n\t\t\t&::before {\n\t\t\t\tfloat: right;\n\t\t\t\tmargin: 0 0 0 gutter(of 4 narrow);\n\t\t\t}\n\t\t\t+ dd {\n\t\t\t\t$font-size-in-pixels: 12;\n\t\t\t\ttext-align: right;\n\t\t\t\tpadding-left: 0;\n\t\t\t\tpadding-right: (1em / $font-size-in-pixels * ($icon-width + $icon-margin));\n\t\t\t}\n\t\t}\n\t}\n}"]}